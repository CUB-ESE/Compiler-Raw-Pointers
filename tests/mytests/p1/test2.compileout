

--------AST--------
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], List([Const(1)])), Assign([AssName('y', 'OP_ASSIGN')], List([Const(2)])), Assign([Subscript(Name('y'), 'OP_ASSIGN', [Const(0)])], Const(3)), Printnl([Subscript(Name('y'), 'OP_APPLY', [Const(0)])], None), Printnl([Add((Name('x'), Name('y')))], None)]))

-------ExpAST-------
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], List([InjectFrom('Const(0)', Const(1))])), Assign([AssName('y', 'OP_ASSIGN')], List([InjectFrom('Const(0)', Const(2))])), Assign([Subscript(Name('y'), 'OP_ASSIGN', InjectFrom('Const(0)', Const(0)))], InjectFrom('Const(0)', Const(3))), Printnl([Subscript(Name('y'), 'OP_APPLY', InjectFrom('Const(0)', Const(0)))], None), Printnl([Let(let_var1, Name('x'), Let(let_var2, Name('y'), IfExp(InjectFrom('Const(0)', And([Or([CallFunc(Name('is_int'), [Name('let_var1')], None, None), CallFunc(Name('is_bool'), [Name('let_var1')], None, None)]), Or([CallFunc(Name('is_int'), [Name('let_var2')], None, None), CallFunc(Name('is_bool'), [Name('let_var2')], None, None)])])), InjectFrom('Const(0)', Add((ProjectTo('Const(0)', let_var1), ProjectTo('Const(0)', let_var2)))), IfExp(InjectFrom('Const(0)', And([CallFunc(Name('is_big'), [Name('let_var1')], None, None), CallFunc(Name('is_big'), [Name('let_var2')], None, None)])), InjectFrom('Const(3)', CallFunc(Name('add'), [ProjectTo('Const(3)', let_var1), ProjectTo('Const(3)', let_var2)], None, None)), CallFunc(Name('error_pyobj'), [Name('1')], None, None)))))], None)]))

-------FLATTEN-------
tmp3 = 1
tmp2 = tmp3 << 2
tmp2 = tmp2 | 0
tmp1= create_list(tmp2)
tmp1 = tmp1 | 3
tmp5 = 0
tmp4 = tmp5 << 2
tmp4 = tmp4 | 0
tmp7 = 1
tmp6 = tmp7 << 2
tmp6 = tmp6 | 0
set_subscript(tmp1, tmp4, tmp6)
tmp0 = tmp1
tmp11 = 1
tmp10 = tmp11 << 2
tmp10 = tmp10 | 0
tmp9= create_list(tmp10)
tmp9 = tmp9 | 3
tmp13 = 0
tmp12 = tmp13 << 2
tmp12 = tmp12 | 0
tmp15 = 2
tmp14 = tmp15 << 2
tmp14 = tmp14 | 0
set_subscript(tmp9, tmp12, tmp14)
tmp8 = tmp9
tmp18 = 0
tmp17 = tmp18 << 2
tmp17 = tmp17 | 0
tmp20 = 3
tmp19 = tmp20 << 2
tmp19 = tmp19 | 0
set_subscript(tmp8, tmp17, tmp19)
tmp23 = 0
tmp22 = tmp23 << 2
tmp22 = tmp22 | 0
tmp21 = get_subscript(tmp8, tmp22)
print tmp21
tmp24 = tmp0
tmp26 = tmp8
tmp33 = is_int(tmp24)
tmp34 = is_bool(tmp24)
tmp32 = tmp33 or tmp34
tmp36 = is_int(tmp26)
tmp37 = is_bool(tmp26)
tmp35 = tmp36 or tmp37
tmp31 = tmp32 and tmp35
tmp30 = tmp31
tmp29 = tmp30 << 2
tmp29 = tmp29 | 0
tmp28 = tmp29
tmp28 = is_true(tmp28)
tmp38 = 0
tmp28 = tmp28!= tmp38
if0 = tmp28
tmp42 = tmp24 >> 2
tmp43 = tmp26 >> 2
tmp44 = tmp42 + tmp43
tmp41 = tmp44
tmp40 = tmp41 << 2
tmp40 = tmp40 | 0
tmp39 = tmp40
else0
tmp49 = is_big(tmp24)
tmp50 = is_big(tmp26)
tmp48 = tmp49 and tmp50
tmp47 = tmp48
tmp46 = tmp47 << 2
tmp46 = tmp46 | 0
tmp45 = tmp46
tmp45 = is_true(tmp45)
tmp51 = 0
tmp45 = tmp45!= tmp51
if1 = tmp45
tmp57 = ~3
tmp56 = tmp24 & tmp57
tmp59 = ~3
tmp58 = tmp26 & tmp59
tmp55 = add(tmp56, tmp58)
tmp54 = tmp55
tmp53 = tmp54 | 3
tmp52 = tmp53
else1
tmp60 = error_pyobj(tmp61)
tmp52 = tmp60
endif1
tmp39 = tmp52
endif0
tmp27 = tmp39
tmp25 = tmp27
print tmp25


-------AST_flat-------
Module(None, Stmt([Assign([AssName('tmp3', 'OP_ASSIGN')], Const(1)), Assign([AssName('tmp2', 'OP_ASSIGN')], LeftShift((Name('tmp3'), Const(2)))), Assign([AssName('tmp2', 'OP_ASSIGN')], Bitor([Name('tmp2'), Const(0)])), Assign([AssName('tmp1', 'OP_ASSIGN')], CallFunc(Name('create_list'), [Name('tmp2')], None, None)), Assign([AssName('tmp1', 'OP_ASSIGN')], Bitor([Name('tmp1'), Const(3)])), Assign([AssName('tmp5', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp4', 'OP_ASSIGN')], LeftShift((Name('tmp5'), Const(2)))), Assign([AssName('tmp4', 'OP_ASSIGN')], Bitor([Name('tmp4'), Const(0)])), Assign([AssName('tmp7', 'OP_ASSIGN')], Const(1)), Assign([AssName('tmp6', 'OP_ASSIGN')], LeftShift((Name('tmp7'), Const(2)))), Assign([AssName('tmp6', 'OP_ASSIGN')], Bitor([Name('tmp6'), Const(0)])), Discard(CallFunc(Name('set_subscript'), [Name('tmp1'), Name('tmp4'), Name('tmp6')], None, None)), Assign([AssName('tmp0', 'OP_ASSIGN')], Name('tmp1')), Assign([AssName('tmp11', 'OP_ASSIGN')], Const(1)), Assign([AssName('tmp10', 'OP_ASSIGN')], LeftShift((Name('tmp11'), Const(2)))), Assign([AssName('tmp10', 'OP_ASSIGN')], Bitor([Name('tmp10'), Const(0)])), Assign([AssName('tmp9', 'OP_ASSIGN')], CallFunc(Name('create_list'), [Name('tmp10')], None, None)), Assign([AssName('tmp9', 'OP_ASSIGN')], Bitor([Name('tmp9'), Const(3)])), Assign([AssName('tmp13', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp12', 'OP_ASSIGN')], LeftShift((Name('tmp13'), Const(2)))), Assign([AssName('tmp12', 'OP_ASSIGN')], Bitor([Name('tmp12'), Const(0)])), Assign([AssName('tmp15', 'OP_ASSIGN')], Const(2)), Assign([AssName('tmp14', 'OP_ASSIGN')], LeftShift((Name('tmp15'), Const(2)))), Assign([AssName('tmp14', 'OP_ASSIGN')], Bitor([Name('tmp14'), Const(0)])), Discard(CallFunc(Name('set_subscript'), [Name('tmp9'), Name('tmp12'), Name('tmp14')], None, None)), Assign([AssName('tmp8', 'OP_ASSIGN')], Name('tmp9')), Assign([AssName('tmp18', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp17', 'OP_ASSIGN')], LeftShift((Name('tmp18'), Const(2)))), Assign([AssName('tmp17', 'OP_ASSIGN')], Bitor([Name('tmp17'), Const(0)])), Assign([AssName('tmp20', 'OP_ASSIGN')], Const(3)), Assign([AssName('tmp19', 'OP_ASSIGN')], LeftShift((Name('tmp20'), Const(2)))), Assign([AssName('tmp19', 'OP_ASSIGN')], Bitor([Name('tmp19'), Const(0)])), Discard(CallFunc(Name('set_subscript'), [Name('tmp8'), Name('tmp17'), Name('tmp19')], None, None)), Assign([AssName('tmp23', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp22', 'OP_ASSIGN')], LeftShift((Name('tmp23'), Const(2)))), Assign([AssName('tmp22', 'OP_ASSIGN')], Bitor([Name('tmp22'), Const(0)])), Assign([AssName('tmp21', 'OP_ASSIGN')], CallFunc(Name('get_subscript'), [Name('tmp8'), Name('tmp22')], None, None)), Printnl([Name('tmp21')], None), Assign([AssName('tmp24', 'OP_ASSIGN')], Name('tmp0')), Assign([AssName('tmp26', 'OP_ASSIGN')], Name('tmp8')), Assign([AssName('tmp33', 'OP_ASSIGN')], CallFunc(Name('is_int'), [Name('tmp24')], None, None)), Assign([AssName('tmp34', 'OP_ASSIGN')], CallFunc(Name('is_bool'), [Name('tmp24')], None, None)), Assign([AssName('tmp32', 'OP_ASSIGN')], Or([Name('tmp33'), Name('tmp34')])), Assign([AssName('tmp36', 'OP_ASSIGN')], CallFunc(Name('is_int'), [Name('tmp26')], None, None)), Assign([AssName('tmp37', 'OP_ASSIGN')], CallFunc(Name('is_bool'), [Name('tmp26')], None, None)), Assign([AssName('tmp35', 'OP_ASSIGN')], Or([Name('tmp36'), Name('tmp37')])), Assign([AssName('tmp31', 'OP_ASSIGN')], And([Name('tmp32'), Name('tmp35')])), Assign([AssName('tmp30', 'OP_ASSIGN')], Name('tmp31')), Assign([AssName('tmp29', 'OP_ASSIGN')], LeftShift((Name('tmp30'), Const(2)))), Assign([AssName('tmp29', 'OP_ASSIGN')], Bitor([Name('tmp29'), Const(0)])), Assign([AssName('tmp28', 'OP_ASSIGN')], Name('tmp29')), Assign([AssName('tmp28', 'OP_ASSIGN')], CallFunc(Name('is_true'), [Name('tmp28')], None, None)), Assign([AssName('tmp38', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp28', 'OP_ASSIGN')], Compare(Name('tmp28'), [('!=', Name('tmp38'))])), Assign([AssName('if0', 'OP_ASSIGN')], Name('tmp28')), Assign([AssName('tmp42', 'OP_ASSIGN')], RightShift((Name('tmp24'), Const(2)))), Assign([AssName('tmp43', 'OP_ASSIGN')], RightShift((Name('tmp26'), Const(2)))), Assign([AssName('tmp44', 'OP_ASSIGN')], Add((Name('tmp42'), Name('tmp43')))), Assign([AssName('tmp41', 'OP_ASSIGN')], Name('tmp44')), Assign([AssName('tmp40', 'OP_ASSIGN')], LeftShift((Name('tmp41'), Const(2)))), Assign([AssName('tmp40', 'OP_ASSIGN')], Bitor([Name('tmp40'), Const(0)])), Assign([AssName('tmp39', 'OP_ASSIGN')], Name('tmp40')), Discard(Name('else0')), Assign([AssName('tmp49', 'OP_ASSIGN')], CallFunc(Name('is_big'), [Name('tmp24')], None, None)), Assign([AssName('tmp50', 'OP_ASSIGN')], CallFunc(Name('is_big'), [Name('tmp26')], None, None)), Assign([AssName('tmp48', 'OP_ASSIGN')], And([Name('tmp49'), Name('tmp50')])), Assign([AssName('tmp47', 'OP_ASSIGN')], Name('tmp48')), Assign([AssName('tmp46', 'OP_ASSIGN')], LeftShift((Name('tmp47'), Const(2)))), Assign([AssName('tmp46', 'OP_ASSIGN')], Bitor([Name('tmp46'), Const(0)])), Assign([AssName('tmp45', 'OP_ASSIGN')], Name('tmp46')), Assign([AssName('tmp45', 'OP_ASSIGN')], CallFunc(Name('is_true'), [Name('tmp45')], None, None)), Assign([AssName('tmp51', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp45', 'OP_ASSIGN')], Compare(Name('tmp45'), [('!=', Name('tmp51'))])), Assign([AssName('if1', 'OP_ASSIGN')], Name('tmp45')), Assign([AssName('tmp57', 'OP_ASSIGN')], Invert(Const(3))), Assign([AssName('tmp56', 'OP_ASSIGN')], Bitand([Name('tmp24'), Name('tmp57')])), Assign([AssName('tmp59', 'OP_ASSIGN')], Invert(Const(3))), Assign([AssName('tmp58', 'OP_ASSIGN')], Bitand([Name('tmp26'), Name('tmp59')])), Assign([AssName('tmp55', 'OP_ASSIGN')], CallFunc(Name('add'), [Name('tmp56'), Name('tmp58')], None, None)), Assign([AssName('tmp54', 'OP_ASSIGN')], Name('tmp55')), Assign([AssName('tmp53', 'OP_ASSIGN')], Bitor([Name('tmp54'), Const(3)])), Assign([AssName('tmp52', 'OP_ASSIGN')], Name('tmp53')), Discard(Name('else1')), Assign([AssName('tmp60', 'OP_ASSIGN')], CallFunc(Name('error_pyobj'), [Name('tmp61')], None, None)), Assign([AssName('tmp52', 'OP_ASSIGN')], Name('tmp60')), Discard(Name('endif1')), Assign([AssName('tmp39', 'OP_ASSIGN')], Name('tmp52')), Discard(Name('endif0')), Assign([AssName('tmp27', 'OP_ASSIGN')], Name('tmp39')), Assign([AssName('tmp25', 'OP_ASSIGN')], Name('tmp27')), Printnl([Name('tmp25')], None)]))

-------x86_IR-------
['movl', '$1', 'tmp3']
['movl', 'tmp3', 'tmp62']
['shl', 'tmp62', '$2']
['movl', 'tmp62', 'tmp2']
['movl', 'tmp2', 'tmp63']
['or', 'tmp63', '$0']
['movl', 'tmp63', 'tmp2']
['call', 'create_list', ['tmp2']]
['movl', '%eax', 'tmp64']
['movl', 'tmp64', 'tmp1']
['movl', 'tmp1', 'tmp65']
['or', 'tmp65', '$3']
['movl', 'tmp65', 'tmp1']
['movl', '$0', 'tmp5']
['movl', 'tmp5', 'tmp66']
['shl', 'tmp66', '$2']
['movl', 'tmp66', 'tmp4']
['movl', 'tmp4', 'tmp67']
['or', 'tmp67', '$0']
['movl', 'tmp67', 'tmp4']
['movl', '$1', 'tmp7']
['movl', 'tmp7', 'tmp68']
['shl', 'tmp68', '$2']
['movl', 'tmp68', 'tmp6']
['movl', 'tmp6', 'tmp69']
['or', 'tmp69', '$0']
['movl', 'tmp69', 'tmp6']
['call', 'set_subscript', ['tmp1', 'tmp4', 'tmp6']]
['movl', '%eax', 'tmp70']
['movl', 'tmp1', 'tmp0']
['movl', '$1', 'tmp11']
['movl', 'tmp11', 'tmp71']
['shl', 'tmp71', '$2']
['movl', 'tmp71', 'tmp10']
['movl', 'tmp10', 'tmp72']
['or', 'tmp72', '$0']
['movl', 'tmp72', 'tmp10']
['call', 'create_list', ['tmp10']]
['movl', '%eax', 'tmp73']
['movl', 'tmp73', 'tmp9']
['movl', 'tmp9', 'tmp74']
['or', 'tmp74', '$3']
['movl', 'tmp74', 'tmp9']
['movl', '$0', 'tmp13']
['movl', 'tmp13', 'tmp75']
['shl', 'tmp75', '$2']
['movl', 'tmp75', 'tmp12']
['movl', 'tmp12', 'tmp76']
['or', 'tmp76', '$0']
['movl', 'tmp76', 'tmp12']
['movl', '$2', 'tmp15']
['movl', 'tmp15', 'tmp77']
['shl', 'tmp77', '$2']
['movl', 'tmp77', 'tmp14']
['movl', 'tmp14', 'tmp78']
['or', 'tmp78', '$0']
['movl', 'tmp78', 'tmp14']
['call', 'set_subscript', ['tmp9', 'tmp12', 'tmp14']]
['movl', '%eax', 'tmp79']
['movl', 'tmp9', 'tmp8']
['movl', '$0', 'tmp18']
['movl', 'tmp18', 'tmp80']
['shl', 'tmp80', '$2']
['movl', 'tmp80', 'tmp17']
['movl', 'tmp17', 'tmp81']
['or', 'tmp81', '$0']
['movl', 'tmp81', 'tmp17']
['movl', '$3', 'tmp20']
['movl', 'tmp20', 'tmp82']
['shl', 'tmp82', '$2']
['movl', 'tmp82', 'tmp19']
['movl', 'tmp19', 'tmp83']
['or', 'tmp83', '$0']
['movl', 'tmp83', 'tmp19']
['call', 'set_subscript', ['tmp8', 'tmp17', 'tmp19']]
['movl', '%eax', 'tmp84']
['movl', '$0', 'tmp23']
['movl', 'tmp23', 'tmp85']
['shl', 'tmp85', '$2']
['movl', 'tmp85', 'tmp22']
['movl', 'tmp22', 'tmp86']
['or', 'tmp86', '$0']
['movl', 'tmp86', 'tmp22']
['call', 'get_subscript', ['tmp8', 'tmp22']]
['movl', '%eax', 'tmp87']
['movl', 'tmp87', 'tmp21']
['print', 'tmp21', None]
['movl', 'tmp0', 'tmp24']
['movl', 'tmp8', 'tmp26']
['call', 'is_int', ['tmp24']]
['movl', '%eax', 'tmp88']
['movl', 'tmp88', 'tmp33']
['call', 'is_bool', ['tmp24']]
['movl', '%eax', 'tmp89']
['movl', 'tmp89', 'tmp34']
['movl', 'tmp33', 'tmp90']
['or', 'tmp90', 'tmp34']
['movl', 'tmp90', 'tmp32']
['call', 'is_int', ['tmp26']]
['movl', '%eax', 'tmp91']
['movl', 'tmp91', 'tmp36']
['call', 'is_bool', ['tmp26']]
['movl', '%eax', 'tmp92']
['movl', 'tmp92', 'tmp37']
['movl', 'tmp36', 'tmp93']
['or', 'tmp93', 'tmp37']
['movl', 'tmp93', 'tmp35']
['movl', 'tmp32', 'tmp94']
['and', 'tmp94', 'tmp35']
['movl', 'tmp94', 'tmp31']
['movl', 'tmp31', 'tmp30']
['movl', 'tmp30', 'tmp95']
['shl', 'tmp95', '$2']
['movl', 'tmp95', 'tmp29']
['movl', 'tmp29', 'tmp96']
['or', 'tmp96', '$0']
['movl', 'tmp96', 'tmp29']
['movl', 'tmp29', 'tmp28']
['call', 'is_true', ['tmp28']]
['movl', '%eax', 'tmp97']
['movl', 'tmp97', 'tmp28']
['movl', '$0', 'tmp38']
['cmp', 'tmp28', 'tmp38', 'tmp99']
['sete', 'tmp98', 'tmp99']
['not', 'tmp98', None]
['and', 'tmp98', '$1']
['movl', 'tmp98', 'tmp28']
['movl', '$1', 'tmp100']
['if', 'tmp28', '0', 'tmp100']
['movl', 'tmp24', 'tmp101']
['shr', 'tmp101', '$2']
['movl', 'tmp101', 'tmp42']
['movl', 'tmp26', 'tmp102']
['shr', 'tmp102', '$2']
['movl', 'tmp102', 'tmp43']
['movl', 'tmp43', 'tmp103']
['addl', 'tmp42', 'tmp103']
['movl', 'tmp103', 'tmp44']
['movl', 'tmp44', 'tmp41']
['movl', 'tmp41', 'tmp104']
['shl', 'tmp104', '$2']
['movl', 'tmp104', 'tmp40']
['movl', 'tmp40', 'tmp105']
['or', 'tmp105', '$0']
['movl', 'tmp105', 'tmp40']
['movl', 'tmp40', 'tmp39']
['else', None, '0']
['call', 'is_big', ['tmp24']]
['movl', '%eax', 'tmp106']
['movl', 'tmp106', 'tmp49']
['call', 'is_big', ['tmp26']]
['movl', '%eax', 'tmp107']
['movl', 'tmp107', 'tmp50']
['movl', 'tmp49', 'tmp108']
['and', 'tmp108', 'tmp50']
['movl', 'tmp108', 'tmp48']
['movl', 'tmp48', 'tmp47']
['movl', 'tmp47', 'tmp109']
['shl', 'tmp109', '$2']
['movl', 'tmp109', 'tmp46']
['movl', 'tmp46', 'tmp110']
['or', 'tmp110', '$0']
['movl', 'tmp110', 'tmp46']
['movl', 'tmp46', 'tmp45']
['call', 'is_true', ['tmp45']]
['movl', '%eax', 'tmp111']
['movl', 'tmp111', 'tmp45']
['movl', '$0', 'tmp51']
['cmp', 'tmp45', 'tmp51', 'tmp113']
['sete', 'tmp112', 'tmp113']
['not', 'tmp112', None]
['and', 'tmp112', '$1']
['movl', 'tmp112', 'tmp45']
['movl', '$1', 'tmp114']
['if', 'tmp45', '1', 'tmp114']
['movl', '$3', 'tmp115']
['not', 'tmp115', None]
['movl', 'tmp115', 'tmp57']
['movl', 'tmp24', 'tmp116']
['and', 'tmp116', 'tmp57']
['movl', 'tmp116', 'tmp56']
['movl', '$3', 'tmp117']
['not', 'tmp117', None]
['movl', 'tmp117', 'tmp59']
['movl', 'tmp26', 'tmp118']
['and', 'tmp118', 'tmp59']
['movl', 'tmp118', 'tmp58']
['call', 'add', ['tmp56', 'tmp58']]
['movl', '%eax', 'tmp119']
['movl', 'tmp119', 'tmp55']
['movl', 'tmp55', 'tmp54']
['movl', 'tmp54', 'tmp120']
['or', 'tmp120', '$3']
['movl', 'tmp120', 'tmp53']
['movl', 'tmp53', 'tmp52']
['else', None, '1']
['call', 'error_pyobj', ['tmp61']]
['movl', '%eax', 'tmp121']
['movl', 'tmp121', 'tmp60']
['movl', 'tmp60', 'tmp52']
['endif', None, '1']
['movl', 'tmp52', 'tmp39']
['endif', None, '0']
['movl', 'tmp39', 'tmp27']
['movl', 'tmp27', 'tmp25']
['print', 'tmp25', None]


True
HERE
['sete', 'tmp98', 'tmp99']
HERE
['sete', 'tmp112', 'tmp113']
True
