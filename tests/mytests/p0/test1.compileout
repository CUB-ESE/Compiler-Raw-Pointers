

--------AST--------
Module(None, Stmt([Printnl([Add((CallFunc(Name('input'), [], None, None), Const(1)))], None)]))

-------ExpAST-------
Module(None, Stmt([Printnl([Let(let_var1, InjectFrom('Const(0)', CallFunc(Name('input'), [], None, None)), Let(let_var2, InjectFrom('Const(0)', Const(1)), IfExp(InjectFrom('Const(0)', And([Or([CallFunc(Name('is_int'), [Name('let_var1')], None, None), CallFunc(Name('is_bool'), [Name('let_var1')], None, None)]), Or([CallFunc(Name('is_int'), [Name('let_var2')], None, None), CallFunc(Name('is_bool'), [Name('let_var2')], None, None)])])), InjectFrom('Const(0)', Add((ProjectTo('Const(0)', let_var1), ProjectTo('Const(0)', let_var2)))), IfExp(InjectFrom('Const(0)', And([CallFunc(Name('is_big'), [Name('let_var1')], None, None), CallFunc(Name('is_big'), [Name('let_var2')], None, None)])), InjectFrom('Const(3)', CallFunc(Name('add'), [ProjectTo('Const(3)', let_var1), ProjectTo('Const(3)', let_var2)], None, None)), CallFunc(Name('error_pyobj'), [Name('1')], None, None)))))], None)]))

-------FLATTEN-------
tmp3 = input()
tmp2 = tmp3
tmp1 = tmp2 << 2
tmp1 = tmp1 | 0
tmp0 = tmp1
tmp7 = 1
tmp6 = tmp7 << 2
tmp6 = tmp6 | 0
tmp5 = tmp6
tmp14 = is_int(tmp0)
tmp15 = is_bool(tmp0)
tmp13 = tmp14 or tmp15
tmp17 = is_int(tmp5)
tmp18 = is_bool(tmp5)
tmp16 = tmp17 or tmp18
tmp12 = tmp13 and tmp16
tmp11 = tmp12
tmp10 = tmp11 << 2
tmp10 = tmp10 | 0
tmp9 = tmp10
tmp9 = is_true(tmp9)
tmp19 = 0
tmp9 = tmp9!= tmp19
if0 = tmp9
tmp23 = tmp0 >> 2
tmp24 = tmp5 >> 2
tmp25 = tmp23 + tmp24
tmp22 = tmp25
tmp21 = tmp22 << 2
tmp21 = tmp21 | 0
tmp20 = tmp21
else0
tmp30 = is_big(tmp0)
tmp31 = is_big(tmp5)
tmp29 = tmp30 and tmp31
tmp28 = tmp29
tmp27 = tmp28 << 2
tmp27 = tmp27 | 0
tmp26 = tmp27
tmp26 = is_true(tmp26)
tmp32 = 0
tmp26 = tmp26!= tmp32
if1 = tmp26
tmp38 = ~3
tmp37 = tmp0 & tmp38
tmp40 = ~3
tmp39 = tmp5 & tmp40
tmp36 = add(tmp37, tmp39)
tmp35 = tmp36
tmp34 = tmp35 | 3
tmp33 = tmp34
else1
tmp41 = error_pyobj(tmp42)
tmp33 = tmp41
endif1
tmp20 = tmp33
endif0
tmp8 = tmp20
tmp4 = tmp8
print tmp4


-------AST_flat-------
Module(None, Stmt([Assign([AssName('tmp3', 'OP_ASSIGN')], CallFunc(Name('input'), [], None, None)), Assign([AssName('tmp2', 'OP_ASSIGN')], Name('tmp3')), Assign([AssName('tmp1', 'OP_ASSIGN')], LeftShift((Name('tmp2'), Const(2)))), Assign([AssName('tmp1', 'OP_ASSIGN')], Bitor([Name('tmp1'), Const(0)])), Assign([AssName('tmp0', 'OP_ASSIGN')], Name('tmp1')), Assign([AssName('tmp7', 'OP_ASSIGN')], Const(1)), Assign([AssName('tmp6', 'OP_ASSIGN')], LeftShift((Name('tmp7'), Const(2)))), Assign([AssName('tmp6', 'OP_ASSIGN')], Bitor([Name('tmp6'), Const(0)])), Assign([AssName('tmp5', 'OP_ASSIGN')], Name('tmp6')), Assign([AssName('tmp14', 'OP_ASSIGN')], CallFunc(Name('is_int'), [Name('tmp0')], None, None)), Assign([AssName('tmp15', 'OP_ASSIGN')], CallFunc(Name('is_bool'), [Name('tmp0')], None, None)), Assign([AssName('tmp13', 'OP_ASSIGN')], Or([Name('tmp14'), Name('tmp15')])), Assign([AssName('tmp17', 'OP_ASSIGN')], CallFunc(Name('is_int'), [Name('tmp5')], None, None)), Assign([AssName('tmp18', 'OP_ASSIGN')], CallFunc(Name('is_bool'), [Name('tmp5')], None, None)), Assign([AssName('tmp16', 'OP_ASSIGN')], Or([Name('tmp17'), Name('tmp18')])), Assign([AssName('tmp12', 'OP_ASSIGN')], And([Name('tmp13'), Name('tmp16')])), Assign([AssName('tmp11', 'OP_ASSIGN')], Name('tmp12')), Assign([AssName('tmp10', 'OP_ASSIGN')], LeftShift((Name('tmp11'), Const(2)))), Assign([AssName('tmp10', 'OP_ASSIGN')], Bitor([Name('tmp10'), Const(0)])), Assign([AssName('tmp9', 'OP_ASSIGN')], Name('tmp10')), Assign([AssName('tmp9', 'OP_ASSIGN')], CallFunc(Name('is_true'), [Name('tmp9')], None, None)), Assign([AssName('tmp19', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp9', 'OP_ASSIGN')], Compare(Name('tmp9'), [('!=', Name('tmp19'))])), Assign([AssName('if0', 'OP_ASSIGN')], Name('tmp9')), Assign([AssName('tmp23', 'OP_ASSIGN')], RightShift((Name('tmp0'), Const(2)))), Assign([AssName('tmp24', 'OP_ASSIGN')], RightShift((Name('tmp5'), Const(2)))), Assign([AssName('tmp25', 'OP_ASSIGN')], Add((Name('tmp23'), Name('tmp24')))), Assign([AssName('tmp22', 'OP_ASSIGN')], Name('tmp25')), Assign([AssName('tmp21', 'OP_ASSIGN')], LeftShift((Name('tmp22'), Const(2)))), Assign([AssName('tmp21', 'OP_ASSIGN')], Bitor([Name('tmp21'), Const(0)])), Assign([AssName('tmp20', 'OP_ASSIGN')], Name('tmp21')), Discard(Name('else0')), Assign([AssName('tmp30', 'OP_ASSIGN')], CallFunc(Name('is_big'), [Name('tmp0')], None, None)), Assign([AssName('tmp31', 'OP_ASSIGN')], CallFunc(Name('is_big'), [Name('tmp5')], None, None)), Assign([AssName('tmp29', 'OP_ASSIGN')], And([Name('tmp30'), Name('tmp31')])), Assign([AssName('tmp28', 'OP_ASSIGN')], Name('tmp29')), Assign([AssName('tmp27', 'OP_ASSIGN')], LeftShift((Name('tmp28'), Const(2)))), Assign([AssName('tmp27', 'OP_ASSIGN')], Bitor([Name('tmp27'), Const(0)])), Assign([AssName('tmp26', 'OP_ASSIGN')], Name('tmp27')), Assign([AssName('tmp26', 'OP_ASSIGN')], CallFunc(Name('is_true'), [Name('tmp26')], None, None)), Assign([AssName('tmp32', 'OP_ASSIGN')], Const(0)), Assign([AssName('tmp26', 'OP_ASSIGN')], Compare(Name('tmp26'), [('!=', Name('tmp32'))])), Assign([AssName('if1', 'OP_ASSIGN')], Name('tmp26')), Assign([AssName('tmp38', 'OP_ASSIGN')], Invert(Const(3))), Assign([AssName('tmp37', 'OP_ASSIGN')], Bitand([Name('tmp0'), Name('tmp38')])), Assign([AssName('tmp40', 'OP_ASSIGN')], Invert(Const(3))), Assign([AssName('tmp39', 'OP_ASSIGN')], Bitand([Name('tmp5'), Name('tmp40')])), Assign([AssName('tmp36', 'OP_ASSIGN')], CallFunc(Name('add'), [Name('tmp37'), Name('tmp39')], None, None)), Assign([AssName('tmp35', 'OP_ASSIGN')], Name('tmp36')), Assign([AssName('tmp34', 'OP_ASSIGN')], Bitor([Name('tmp35'), Const(3)])), Assign([AssName('tmp33', 'OP_ASSIGN')], Name('tmp34')), Discard(Name('else1')), Assign([AssName('tmp41', 'OP_ASSIGN')], CallFunc(Name('error_pyobj'), [Name('tmp42')], None, None)), Assign([AssName('tmp33', 'OP_ASSIGN')], Name('tmp41')), Discard(Name('endif1')), Assign([AssName('tmp20', 'OP_ASSIGN')], Name('tmp33')), Discard(Name('endif0')), Assign([AssName('tmp8', 'OP_ASSIGN')], Name('tmp20')), Assign([AssName('tmp4', 'OP_ASSIGN')], Name('tmp8')), Printnl([Name('tmp4')], None)]))

-------x86_IR-------
['call', 'input', []]
['movl', '%eax', 'tmp43']
['movl', 'tmp43', 'tmp3']
['movl', 'tmp3', 'tmp2']
['movl', 'tmp2', 'tmp44']
['shl', 'tmp44', '$2']
['movl', 'tmp44', 'tmp1']
['movl', 'tmp1', 'tmp45']
['or', 'tmp45', '$0']
['movl', 'tmp45', 'tmp1']
['movl', 'tmp1', 'tmp0']
['movl', '$1', 'tmp7']
['movl', 'tmp7', 'tmp46']
['shl', 'tmp46', '$2']
['movl', 'tmp46', 'tmp6']
['movl', 'tmp6', 'tmp47']
['or', 'tmp47', '$0']
['movl', 'tmp47', 'tmp6']
['movl', 'tmp6', 'tmp5']
['call', 'is_int', ['tmp0']]
['movl', '%eax', 'tmp48']
['movl', 'tmp48', 'tmp14']
['call', 'is_bool', ['tmp0']]
['movl', '%eax', 'tmp49']
['movl', 'tmp49', 'tmp15']
['movl', 'tmp14', 'tmp50']
['or', 'tmp50', 'tmp15']
['movl', 'tmp50', 'tmp13']
['call', 'is_int', ['tmp5']]
['movl', '%eax', 'tmp51']
['movl', 'tmp51', 'tmp17']
['call', 'is_bool', ['tmp5']]
['movl', '%eax', 'tmp52']
['movl', 'tmp52', 'tmp18']
['movl', 'tmp17', 'tmp53']
['or', 'tmp53', 'tmp18']
['movl', 'tmp53', 'tmp16']
['movl', 'tmp13', 'tmp54']
['and', 'tmp54', 'tmp16']
['movl', 'tmp54', 'tmp12']
['movl', 'tmp12', 'tmp11']
['movl', 'tmp11', 'tmp55']
['shl', 'tmp55', '$2']
['movl', 'tmp55', 'tmp10']
['movl', 'tmp10', 'tmp56']
['or', 'tmp56', '$0']
['movl', 'tmp56', 'tmp10']
['movl', 'tmp10', 'tmp9']
['call', 'is_true', ['tmp9']]
['movl', '%eax', 'tmp57']
['movl', 'tmp57', 'tmp9']
['movl', '$0', 'tmp19']
['cmp', 'tmp9', 'tmp19', 'tmp59']
['sete', 'tmp58', 'tmp59']
['not', 'tmp58', None]
['and', 'tmp58', '$1']
['movl', 'tmp58', 'tmp9']
['movl', '$1', 'tmp60']
['if', 'tmp9', '0', 'tmp60']
['movl', 'tmp0', 'tmp61']
['shr', 'tmp61', '$2']
['movl', 'tmp61', 'tmp23']
['movl', 'tmp5', 'tmp62']
['shr', 'tmp62', '$2']
['movl', 'tmp62', 'tmp24']
['movl', 'tmp24', 'tmp63']
['addl', 'tmp23', 'tmp63']
['movl', 'tmp63', 'tmp25']
['movl', 'tmp25', 'tmp22']
['movl', 'tmp22', 'tmp64']
['shl', 'tmp64', '$2']
['movl', 'tmp64', 'tmp21']
['movl', 'tmp21', 'tmp65']
['or', 'tmp65', '$0']
['movl', 'tmp65', 'tmp21']
['movl', 'tmp21', 'tmp20']
['else', None, '0']
['call', 'is_big', ['tmp0']]
['movl', '%eax', 'tmp66']
['movl', 'tmp66', 'tmp30']
['call', 'is_big', ['tmp5']]
['movl', '%eax', 'tmp67']
['movl', 'tmp67', 'tmp31']
['movl', 'tmp30', 'tmp68']
['and', 'tmp68', 'tmp31']
['movl', 'tmp68', 'tmp29']
['movl', 'tmp29', 'tmp28']
['movl', 'tmp28', 'tmp69']
['shl', 'tmp69', '$2']
['movl', 'tmp69', 'tmp27']
['movl', 'tmp27', 'tmp70']
['or', 'tmp70', '$0']
['movl', 'tmp70', 'tmp27']
['movl', 'tmp27', 'tmp26']
['call', 'is_true', ['tmp26']]
['movl', '%eax', 'tmp71']
['movl', 'tmp71', 'tmp26']
['movl', '$0', 'tmp32']
['cmp', 'tmp26', 'tmp32', 'tmp73']
['sete', 'tmp72', 'tmp73']
['not', 'tmp72', None]
['and', 'tmp72', '$1']
['movl', 'tmp72', 'tmp26']
['movl', '$1', 'tmp74']
['if', 'tmp26', '1', 'tmp74']
['movl', '$3', 'tmp75']
['not', 'tmp75', None]
['movl', 'tmp75', 'tmp38']
['movl', 'tmp0', 'tmp76']
['and', 'tmp76', 'tmp38']
['movl', 'tmp76', 'tmp37']
['movl', '$3', 'tmp77']
['not', 'tmp77', None]
['movl', 'tmp77', 'tmp40']
['movl', 'tmp5', 'tmp78']
['and', 'tmp78', 'tmp40']
['movl', 'tmp78', 'tmp39']
['call', 'add', ['tmp37', 'tmp39']]
['movl', '%eax', 'tmp79']
['movl', 'tmp79', 'tmp36']
['movl', 'tmp36', 'tmp35']
['movl', 'tmp35', 'tmp80']
['or', 'tmp80', '$3']
['movl', 'tmp80', 'tmp34']
['movl', 'tmp34', 'tmp33']
['else', None, '1']
['call', 'error_pyobj', ['tmp42']]
['movl', '%eax', 'tmp81']
['movl', 'tmp81', 'tmp41']
['movl', 'tmp41', 'tmp33']
['endif', None, '1']
['movl', 'tmp33', 'tmp20']
['endif', None, '0']
['movl', 'tmp20', 'tmp8']
['movl', 'tmp8', 'tmp4']
['print', 'tmp4', None]


True
HERE
['sete', 'tmp58', 'tmp59']
HERE
['sete', 'tmp72', 'tmp73']
True
