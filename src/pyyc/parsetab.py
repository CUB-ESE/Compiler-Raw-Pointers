
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocPRINTleftPLUSMINUSEQUAL INT LPAREN MINUS NAME PLUS PRINT RPARENprogram : modulemodule : slistslist : slist statement\n             | statementstatement : PRINT expressionstatement : NAME EQUAL expression \n                 | expression EQUAL expression expression : NAME LPAREN expression RPAREN expression : LPAREN expression RPARENstatement : expressionexpression : expression PLUS expressionexpression : INTexpression : NAME LPAREN RPARENexpression : NAMEexpression : MINUS expression'
    
_lr_action_items = {'RPAREN':([4,11,12,14,19,20,21,22,24,26,],[-12,-14,20,21,-15,-9,-13,26,-11,-8,]),'NAME':([0,1,2,3,4,7,8,9,10,11,13,14,15,16,17,18,19,20,21,23,24,25,26,],[3,11,3,-14,-12,-4,11,-10,11,-14,-3,11,11,-5,11,11,-15,-9,-13,-6,-11,-7,-8,]),'INT':([0,1,2,3,4,7,8,9,10,11,13,14,15,16,17,18,19,20,21,23,24,25,26,],[4,4,4,-14,-12,-4,4,-10,4,-14,-3,4,4,-5,4,4,-15,-9,-13,-6,-11,-7,-8,]),'EQUAL':([3,4,9,11,19,20,21,24,26,],[15,-12,18,-14,-15,-9,-13,-11,-8,]),'PLUS':([3,4,9,11,12,16,19,20,21,22,23,24,25,26,],[-14,-12,17,-14,17,17,-15,-9,-13,17,17,-11,17,-8,]),'LPAREN':([0,1,2,3,4,7,8,9,10,11,13,14,15,16,17,18,19,20,21,23,24,25,26,],[1,1,1,14,-12,-4,1,-10,1,14,-3,1,1,-5,1,1,-15,-9,-13,-6,-11,-7,-8,]),'PRINT':([0,2,3,4,7,9,11,13,16,19,20,21,23,24,25,26,],[8,8,-14,-12,-4,-10,-14,-3,-5,-15,-9,-13,-6,-11,-7,-8,]),'MINUS':([0,1,2,3,4,7,8,9,10,11,13,14,15,16,17,18,19,20,21,23,24,25,26,],[10,10,10,-14,-12,-4,10,-10,10,-14,-3,10,10,-5,10,10,-15,-9,-13,-6,-11,-7,-8,]),'$end':([2,3,4,5,6,7,9,11,13,16,19,20,21,23,24,25,26,],[-2,-14,-12,-1,0,-4,-10,-14,-3,-5,-15,-9,-13,-6,-11,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'slist':([0,],[2,]),'program':([0,],[6,]),'expression':([0,1,2,8,10,14,15,17,18,],[9,12,9,16,19,22,23,24,25,]),'statement':([0,2,],[7,13,]),'module':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> module','program',1,'p_program','lparse.py',52),
  ('module -> slist','module',1,'p_statement','lparse.py',55),
  ('slist -> slist statement','slist',2,'p_slist','lparse.py',58),
  ('slist -> statement','slist',1,'p_slist','lparse.py',59),
  ('statement -> PRINT expression','statement',2,'p_print_statement','lparse.py',65),
  ('statement -> NAME EQUAL expression','statement',3,'p_assign_statement','lparse.py',68),
  ('statement -> expression EQUAL expression','statement',3,'p_assign_statement','lparse.py',69),
  ('expression -> NAME LPAREN expression RPAREN','expression',4,'p_funcall_expression','lparse.py',79),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_exp_parens','lparse.py',83),
  ('statement -> expression','statement',1,'p_exp_statement','lparse.py',86),
  ('expression -> expression PLUS expression','expression',3,'p_plus_expression','lparse.py',89),
  ('expression -> INT','expression',1,'p_int_expression','lparse.py',92),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_input_expression','lparse.py',95),
  ('expression -> NAME','expression',1,'p_name_expression','lparse.py',98),
  ('expression -> MINUS expression','expression',2,'p_usub_expression','lparse.py',101),
]
