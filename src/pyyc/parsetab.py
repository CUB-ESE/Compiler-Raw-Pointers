
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEAND ASSIGN COLON COMMA DEDENT DEF DIVIDE ELSE EQ FALSE FLOAT IF INDENT INPUT INT IS LAMBDA LCURLY LPAREN LSQUARE MEMCPY MINUS NAME NEQ NEWLINE NOT OR PLUS PRINT RCURLY RETURN RPAREN RSQUARE STRING TIMES TRUE WHILE\n    program : module\n    \n    module : statements\n    \n    simple_statement : PRINT expression\n    \n    simple_statement : target ASSIGN expression\n                     \n    \n    simple_statement : expression\n                     | target   \n    \n    expression : NAME\n               | TRUE\n               | FALSE\n    \n    expression : INT\n               | FLOAT\n    expression : STRING\n    expression : LPAREN expression RPAREN\n    \n    expression : MINUS expression\n    \n    expression : expression PLUS expression\n    \n    expression :  INPUT LPAREN RPAREN\n    \n    simple_statement :  MEMCPY LPAREN expr_list RPAREN\n    empty :\n    expression : NOT expression\n    \n    expression : expression AND expression\n    \n    expression : expression OR expression\n    \n    expression : expression EQ expression\n               | expression NEQ expression\n               | expression IS expression\n    \n    expression : expression IF expression ELSE expression\n    \n    expression : LSQUARE expr_list RSQUARE\n    \n    expression : LCURLY key_datum_list RCURLY\n    \n    expression : subscription\n    \n    subscription : expression LSQUARE expression RSQUARE\n    \n    target : NAME \n           \n     \n    target : NAME LPAREN expression RPAREN \n    \n    \n    target : subscription\n    \n    key_datum : expression COLON expression\n    \n    key_datum_list : empty\n    \n    key_datum_list : key_datum\n    \n    key_datum_list : key_datum_list COMMA key_datum\n    \n    expr_list : empty\n    \n    expr_list : expression\n    \n    expr_list : expr_list COMMA expression\n    \n    expression : expression LPAREN expr_list RPAREN\n    \n    expression : LAMBDA id_list COLON expression\n    \n    id_list : empty\n    \n    id_list : NAME\n    \n    id_list : id_list COMMA NAME\n    \n    statement : simple_statement\n              | compound_statement\n    \n    simple_statement : RETURN expression\n    \n    compound_statement : DEF NAME LPAREN id_list RPAREN COLON suite\n    \n    suite : INDENT statements DEDENT\n    \n    statements : statement\n    \n    statements : statements statement\n    \n    simple_statement : IF expression COLON suite ELSE COLON suite\n    \n    simple_statement : WHILE expression COLON suite\n    '
    
_lr_action_items = {'DEDENT':([3,8,11,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,89,90,93,96,97,100,101,104,105,108,109,],[-45,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,-53,-17,-31,-29,-40,-41,105,-25,-49,-48,-52,]),'RETURN':([0,3,7,8,11,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,88,89,90,93,96,97,100,101,104,105,108,109,],[1,-45,1,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,1,-53,-17,-31,-29,-40,-41,1,-25,-49,-48,-52,]),'LSQUARE':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,40,41,42,44,45,49,50,51,52,53,54,55,56,57,58,59,63,64,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,86,87,88,89,90,93,95,96,97,98,100,101,104,105,108,109,],[2,2,2,-45,2,2,2,-8,-46,2,-50,2,-12,2,-7,-9,-6,2,-10,-11,-28,2,52,-28,-7,52,52,52,52,-51,2,-14,52,52,2,2,52,52,2,2,2,2,2,2,2,2,2,-26,2,-13,-16,52,52,2,-27,2,52,52,52,52,-15,52,52,52,2,52,2,-53,-17,-31,52,-29,-40,2,52,2,52,-49,-48,-52,]),'LCURLY':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[22,22,22,-45,22,22,22,-8,-46,22,-50,22,-12,22,-7,-9,-6,22,-10,-11,-28,22,-5,-28,-7,-47,-3,-51,22,-14,22,22,-19,22,22,22,22,22,22,22,22,22,-26,22,-13,-16,-4,22,-27,22,-20,-22,-24,-15,-21,-23,22,22,-53,-17,-31,-29,-40,22,-41,22,-25,-49,-48,-52,]),'WHILE':([0,3,7,8,11,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,88,89,90,93,96,97,100,101,104,105,108,109,],[5,-45,5,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,5,-53,-17,-31,-29,-40,-41,5,-25,-49,-48,-52,]),'PRINT':([0,3,7,8,11,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,88,89,90,93,96,97,100,101,104,105,108,109,],[6,-45,6,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,6,-53,-17,-31,-29,-40,-41,6,-25,-49,-48,-52,]),'TRUE':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[8,8,8,-45,8,8,8,-8,-46,8,-50,8,-12,8,-7,-9,-6,8,-10,-11,-28,8,-5,-28,-7,-47,-3,-51,8,-14,8,8,-19,8,8,8,8,8,8,8,8,8,-26,8,-13,-16,-4,8,-27,8,-20,-22,-24,-15,-21,-23,8,8,-53,-17,-31,-29,-40,8,-41,8,-25,-49,-48,-52,]),'MEMCPY':([0,3,7,8,11,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,88,89,90,93,96,97,100,101,104,105,108,109,],[9,-45,9,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,9,-53,-17,-31,-29,-40,-41,9,-25,-49,-48,-52,]),'DEF':([0,3,7,8,11,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,88,89,90,93,96,97,100,101,104,105,108,109,],[10,-45,10,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,10,-53,-17,-31,-29,-40,-41,10,-25,-49,-48,-52,]),'NEQ':([8,16,19,20,23,24,25,27,29,30,31,34,35,36,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,95,96,97,100,104,],[-8,-12,-7,-9,-10,-11,-28,59,-28,-7,59,59,59,59,-14,59,59,59,59,-26,-13,-16,59,59,-27,59,59,59,59,-15,59,59,59,59,59,-29,-40,59,59,]),'RSQUARE':([2,8,16,20,23,24,29,30,32,33,34,40,50,63,69,70,74,76,77,78,79,80,83,84,87,96,97,100,104,],[-18,-8,-12,-9,-10,-11,-28,-7,63,-37,-38,-14,-19,-26,-13,-16,-27,-20,96,-22,-24,-15,-21,-23,-39,-29,-40,-41,-25,]),'RPAREN':([8,16,20,23,24,29,30,33,34,38,40,42,43,50,56,60,62,63,66,67,69,70,71,74,76,78,79,80,81,83,84,87,91,96,97,99,100,104,],[-8,-12,-9,-10,-11,-28,-7,-37,-38,-18,-14,69,70,-19,-18,-43,-42,-26,90,-18,-13,-16,93,-27,-20,-22,-24,-15,97,-21,-23,-39,102,-29,-40,-44,-41,-25,]),'RCURLY':([8,16,20,22,23,24,29,30,40,46,47,48,50,63,69,70,74,76,78,79,80,83,84,94,95,96,97,100,104,],[-8,-12,-9,-18,-10,-11,-28,-7,-14,-34,-35,74,-19,-26,-13,-16,-27,-20,-22,-24,-15,-21,-23,-36,-33,-29,-40,-41,-25,]),'MINUS':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[12,12,12,-45,12,12,12,-8,-46,12,-50,12,-12,12,-7,-9,-6,12,-10,-11,-28,12,-5,-28,-7,-47,-3,-51,12,-14,12,12,-19,12,12,12,12,12,12,12,12,12,-26,12,-13,-16,-4,12,-27,12,-20,-22,-24,-15,-21,-23,12,12,-53,-17,-31,-29,-40,12,-41,12,-25,-49,-48,-52,]),'COMMA':([2,8,16,20,22,23,24,28,29,30,32,33,34,38,40,46,47,48,50,56,60,61,62,63,66,67,69,70,74,76,78,79,80,81,83,84,87,91,94,95,96,97,99,100,104,],[-18,-8,-12,-9,-18,-10,-11,-18,-28,-7,64,-37,-38,-18,-14,-34,-35,73,-19,-18,-43,85,-42,-26,64,-18,-13,-16,-27,-20,-22,-24,-15,64,-21,-23,-39,85,-36,-33,-29,-40,-44,-41,-25,]),'COLON':([8,16,20,23,24,28,29,30,35,40,41,49,50,60,61,62,63,69,70,74,76,78,79,80,83,84,96,97,99,100,102,103,104,],[-8,-12,-9,-10,-11,-18,-28,-7,65,-14,68,75,-19,-43,86,-42,-26,-13,-16,-27,-20,-22,-24,-15,-21,-23,-29,-40,-44,-41,106,107,-25,]),'ASSIGN':([19,21,25,93,96,],[-30,45,-32,-31,-29,]),'$end':([3,4,7,8,11,13,14,16,19,20,21,23,24,25,27,29,30,31,36,37,40,50,63,69,70,72,74,76,78,79,80,83,84,89,90,93,96,97,100,104,105,108,109,],[-45,-1,-2,-8,-46,0,-50,-12,-7,-9,-6,-10,-11,-28,-5,-28,-7,-47,-3,-51,-14,-19,-26,-13,-16,-4,-27,-20,-22,-24,-15,-21,-23,-53,-17,-31,-29,-40,-41,-25,-49,-48,-52,]),'PLUS':([8,16,19,20,23,24,25,27,29,30,31,34,35,36,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,95,96,97,100,104,],[-8,-12,-7,-9,-10,-11,-28,55,-28,-7,55,55,55,55,-14,55,55,55,55,-26,-13,-16,55,55,-27,55,55,55,55,-15,55,55,55,55,55,-29,-40,55,55,]),'STRING':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[16,16,16,-45,16,16,16,-8,-46,16,-50,16,-12,16,-7,-9,-6,16,-10,-11,-28,16,-5,-28,-7,-47,-3,-51,16,-14,16,16,-19,16,16,16,16,16,16,16,16,16,-26,16,-13,-16,-4,16,-27,16,-20,-22,-24,-15,-21,-23,16,16,-53,-17,-31,-29,-40,16,-41,16,-25,-49,-48,-52,]),'IS':([8,16,19,20,23,24,25,27,29,30,31,34,35,36,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,95,96,97,100,104,],[-8,-12,-7,-9,-10,-11,-28,54,-28,-7,54,54,54,54,-14,54,54,54,54,-26,-13,-16,54,54,-27,54,54,54,54,-15,54,54,54,54,54,-29,-40,54,54,]),'ELSE':([8,16,20,23,24,29,30,40,50,63,69,70,74,76,78,79,80,82,83,84,92,96,97,100,104,105,],[-8,-12,-9,-10,-11,-28,-7,-14,-19,-26,-13,-16,-27,-20,-22,-24,-15,98,-21,-23,103,-29,-40,-41,-25,-49,]),'LPAREN':([0,1,2,3,5,6,7,8,9,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,40,41,42,44,45,49,50,51,52,53,54,55,56,57,58,59,63,64,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,86,87,88,89,90,93,95,96,97,98,100,101,104,105,108,109,],[17,17,17,-45,17,17,17,-8,38,-46,17,-50,17,-12,17,43,44,-9,-6,17,-10,-11,-28,17,56,-28,-7,56,56,56,56,-51,17,67,-14,56,56,17,17,56,56,17,17,17,17,17,17,17,17,17,-26,17,-13,-16,56,56,17,-27,17,56,56,56,56,-15,56,56,56,17,56,17,-53,-17,-31,56,-29,-40,17,56,17,56,-49,-48,-52,]),'INPUT':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[18,18,18,-45,18,18,18,-8,-46,18,-50,18,-12,18,-7,-9,-6,18,-10,-11,-28,18,-5,-28,-7,-47,-3,-51,18,-14,18,18,-19,18,18,18,18,18,18,18,18,18,-26,18,-13,-16,-4,18,-27,18,-20,-22,-24,-15,-21,-23,18,18,-53,-17,-31,-29,-40,18,-41,18,-25,-49,-48,-52,]),'EQ':([8,16,19,20,23,24,25,27,29,30,31,34,35,36,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,95,96,97,100,104,],[-8,-12,-7,-9,-10,-11,-28,53,-28,-7,53,53,53,53,-14,53,53,53,53,-26,-13,-16,53,53,-27,53,53,53,53,-15,53,53,53,53,53,-29,-40,53,53,]),'IF':([0,3,7,8,11,14,16,19,20,21,23,24,25,27,29,30,31,34,35,36,37,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,88,89,90,93,95,96,97,100,101,104,105,108,109,],[15,-45,15,-8,-46,-50,-12,-7,-9,-6,-10,-11,-28,57,-28,-7,57,57,57,57,-51,-14,57,57,57,57,-26,-13,-16,57,57,-27,57,57,57,57,-15,57,57,57,57,15,-53,-17,-31,57,-29,-40,57,15,57,-49,-48,-52,]),'AND':([8,16,19,20,23,24,25,27,29,30,31,34,35,36,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,95,96,97,100,104,],[-8,-12,-7,-9,-10,-11,-28,51,-28,-7,51,51,51,51,-14,51,51,51,51,-26,-13,-16,51,51,-27,51,51,51,51,-15,51,51,51,51,51,-29,-40,51,51,]),'FALSE':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[20,20,20,-45,20,20,20,-8,-46,20,-50,20,-12,20,-7,-9,-6,20,-10,-11,-28,20,-5,-28,-7,-47,-3,-51,20,-14,20,20,-19,20,20,20,20,20,20,20,20,20,-26,20,-13,-16,-4,20,-27,20,-20,-22,-24,-15,-21,-23,20,20,-53,-17,-31,-29,-40,20,-41,20,-25,-49,-48,-52,]),'NAME':([0,1,2,3,5,6,7,8,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,67,69,70,72,73,74,75,76,78,79,80,83,84,85,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[19,30,30,-45,30,30,19,-8,39,-46,30,-50,30,-12,30,-7,-9,-6,30,-10,-11,-28,30,-5,60,-28,-7,-47,-3,-51,30,-14,30,30,-19,30,30,30,30,30,30,30,30,30,-26,30,60,-13,-16,-4,30,-27,30,-20,-22,-24,-15,-21,-23,99,30,19,-53,-17,-31,-29,-40,30,-41,19,-25,-49,-48,-52,]),'INT':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[23,23,23,-45,23,23,23,-8,-46,23,-50,23,-12,23,-7,-9,-6,23,-10,-11,-28,23,-5,-28,-7,-47,-3,-51,23,-14,23,23,-19,23,23,23,23,23,23,23,23,23,-26,23,-13,-16,-4,23,-27,23,-20,-22,-24,-15,-21,-23,23,23,-53,-17,-31,-29,-40,23,-41,23,-25,-49,-48,-52,]),'FLOAT':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[24,24,24,-45,24,24,24,-8,-46,24,-50,24,-12,24,-7,-9,-6,24,-10,-11,-28,24,-5,-28,-7,-47,-3,-51,24,-14,24,24,-19,24,24,24,24,24,24,24,24,24,-26,24,-13,-16,-4,24,-27,24,-20,-22,-24,-15,-21,-23,24,24,-53,-17,-31,-29,-40,24,-41,24,-25,-49,-48,-52,]),'INDENT':([65,68,106,107,],[88,88,88,88,]),'NOT':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[26,26,26,-45,26,26,26,-8,-46,26,-50,26,-12,26,-7,-9,-6,26,-10,-11,-28,26,-5,-28,-7,-47,-3,-51,26,-14,26,26,-19,26,26,26,26,26,26,26,26,26,-26,26,-13,-16,-4,26,-27,26,-20,-22,-24,-15,-21,-23,26,26,-53,-17,-31,-29,-40,26,-41,26,-25,-49,-48,-52,]),'OR':([8,16,19,20,23,24,25,27,29,30,31,34,35,36,40,41,42,49,50,63,69,70,71,72,74,76,77,78,79,80,82,83,84,87,95,96,97,100,104,],[-8,-12,-7,-9,-10,-11,-28,58,-28,-7,58,58,58,58,-14,58,58,58,58,-26,-13,-16,58,58,-27,58,58,58,58,-15,58,58,58,58,58,-29,-40,58,58,]),'LAMBDA':([0,1,2,3,5,6,7,8,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,29,30,31,36,37,38,40,44,45,50,51,52,53,54,55,56,57,58,59,63,64,69,70,72,73,74,75,76,78,79,80,83,84,86,88,89,90,93,96,97,98,100,101,104,105,108,109,],[28,28,28,-45,28,28,28,-8,-46,28,-50,28,-12,28,-7,-9,-6,28,-10,-11,-28,28,-5,-28,-7,-47,-3,-51,28,-14,28,28,-19,28,28,28,28,28,28,28,28,28,-26,28,-13,-16,-4,28,-27,28,-20,-22,-24,-15,-21,-23,28,28,-53,-17,-31,-29,-40,28,-41,28,-25,-49,-48,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'key_datum':([22,73,],[47,94,]),'key_datum_list':([22,],[48,]),'statements':([0,88,],[7,101,]),'target':([0,7,88,101,],[21,21,21,21,]),'compound_statement':([0,7,88,101,],[11,11,11,11,]),'expr_list':([2,38,56,],[32,66,81,]),'simple_statement':([0,7,88,101,],[3,3,3,3,]),'module':([0,],[4,]),'id_list':([28,67,],[61,91,]),'program':([0,],[13,]),'statement':([0,7,88,101,],[14,37,14,37,]),'suite':([65,68,106,107,],[89,92,108,109,]),'expression':([0,1,2,5,6,7,12,15,17,22,26,38,44,45,51,52,53,54,55,56,57,58,59,64,73,75,86,88,98,101,],[27,31,34,35,36,27,40,41,42,49,50,34,71,72,76,77,78,79,80,34,82,83,84,87,49,95,100,27,104,27,]),'empty':([2,22,28,38,56,67,],[33,46,62,33,33,62,]),'subscription':([0,1,2,5,6,7,12,15,17,22,26,38,44,45,51,52,53,54,55,56,57,58,59,64,73,75,86,88,98,101,],[25,29,29,29,29,25,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,25,29,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> module','program',1,'p_program','lparser.py',148),
  ('module -> statements','module',1,'p_module','lparser.py',154),
  ('simple_statement -> PRINT expression','simple_statement',2,'p_print_statement','lparser.py',160),
  ('simple_statement -> target ASSIGN expression','simple_statement',3,'p_assign_statement','lparser.py',166),
  ('simple_statement -> expression','simple_statement',1,'p_expr_statement','lparser.py',173),
  ('simple_statement -> target','simple_statement',1,'p_expr_statement','lparser.py',174),
  ('expression -> NAME','expression',1,'p_expression_name','lparser.py',180),
  ('expression -> TRUE','expression',1,'p_expression_name','lparser.py',181),
  ('expression -> FALSE','expression',1,'p_expression_name','lparser.py',182),
  ('expression -> INT','expression',1,'p_expression_const','lparser.py',188),
  ('expression -> FLOAT','expression',1,'p_expression_const','lparser.py',189),
  ('expression -> STRING','expression',1,'p_expression_cstring','lparser.py',194),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','lparser.py',199),
  ('expression -> MINUS expression','expression',2,'p_expression_usub','lparser.py',205),
  ('expression -> expression PLUS expression','expression',3,'p_expression_add','lparser.py',211),
  ('expression -> INPUT LPAREN RPAREN','expression',3,'p_expression_input','lparser.py',218),
  ('simple_statement -> MEMCPY LPAREN expr_list RPAREN','simple_statement',4,'p_expression_memcpy','lparser.py',224),
  ('empty -> <empty>','empty',0,'p_empty','lparser.py',233),
  ('expression -> NOT expression','expression',2,'p_expression_unot','lparser.py',238),
  ('expression -> expression AND expression','expression',3,'p_expression_and','lparser.py',244),
  ('expression -> expression OR expression','expression',3,'p_expression_or','lparser.py',250),
  ('expression -> expression EQ expression','expression',3,'p_expression_compare','lparser.py',256),
  ('expression -> expression NEQ expression','expression',3,'p_expression_compare','lparser.py',257),
  ('expression -> expression IS expression','expression',3,'p_expression_compare','lparser.py',258),
  ('expression -> expression IF expression ELSE expression','expression',5,'p_expression_ternary','lparser.py',264),
  ('expression -> LSQUARE expr_list RSQUARE','expression',3,'p_expression_list','lparser.py',270),
  ('expression -> LCURLY key_datum_list RCURLY','expression',3,'p_expression_dict','lparser.py',276),
  ('expression -> subscription','expression',1,'p_expression_subscript','lparser.py',282),
  ('subscription -> expression LSQUARE expression RSQUARE','subscription',4,'p_subscript','lparser.py',288),
  ('target -> NAME','target',1,'p_target_name','lparser.py',294),
  ('target -> NAME LPAREN expression RPAREN','target',4,'p_target_func','lparser.py',301),
  ('target -> subscription','target',1,'p_target_subscript','lparser.py',308),
  ('key_datum -> expression COLON expression','key_datum',3,'p_key_datum','lparser.py',315),
  ('key_datum_list -> empty','key_datum_list',1,'p_key_datum_list_empty','lparser.py',321),
  ('key_datum_list -> key_datum','key_datum_list',1,'p_key_datum_list','lparser.py',327),
  ('key_datum_list -> key_datum_list COMMA key_datum','key_datum_list',3,'p_key_datum_list_extend','lparser.py',333),
  ('expr_list -> empty','expr_list',1,'p_expr_list_empty','lparser.py',340),
  ('expr_list -> expression','expr_list',1,'p_expr_list','lparser.py',346),
  ('expr_list -> expr_list COMMA expression','expr_list',3,'p_expr_list_extend','lparser.py',352),
  ('expression -> expression LPAREN expr_list RPAREN','expression',4,'p_expression_callfunc','lparser.py',363),
  ('expression -> LAMBDA id_list COLON expression','expression',4,'p_expression_lambda','lparser.py',369),
  ('id_list -> empty','id_list',1,'p_id_list_empty','lparser.py',375),
  ('id_list -> NAME','id_list',1,'p_id_list','lparser.py',381),
  ('id_list -> id_list COMMA NAME','id_list',3,'p_id_list_extend','lparser.py',387),
  ('statement -> simple_statement','statement',1,'p_statement','lparser.py',394),
  ('statement -> compound_statement','statement',1,'p_statement','lparser.py',395),
  ('simple_statement -> RETURN expression','simple_statement',2,'p_return_statement','lparser.py',401),
  ('compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite','compound_statement',7,'p_compound_statement','lparser.py',407),
  ('suite -> INDENT statements DEDENT','suite',3,'p_suite','lparser.py',413),
  ('statements -> statement','statements',1,'p_statements','lparser.py',419),
  ('statements -> statements statement','statements',2,'p_statements_extend','lparser.py',425),
  ('simple_statement -> IF expression COLON suite ELSE COLON suite','simple_statement',7,'p_if_else_statement','lparser.py',437),
  ('simple_statement -> WHILE expression COLON suite','simple_statement',4,'p_while_statement','lparser.py',443),
]
