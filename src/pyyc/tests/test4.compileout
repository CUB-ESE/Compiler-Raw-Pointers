

--------AST--------
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], Const(1)), Assign([AssName('y', 'OP_ASSIGN')], Const(2)), Printnl([Add((Name('x'), Name('y')))], None)]))

-------ExpAST-------
Module(None, Stmt([Assign([AssName('x', 'OP_ASSIGN')], Const(1)), Assign([AssName('y', 'OP_ASSIGN')], Const(2)), Printnl([Let(let_var2, Name('y'), Let(let_var1, Name('x'), IfExp(And([Or([Compare(GetTag('let_var1'), [('==', Const(1))]), Compare(GetTag('let_var1'), [('==', Const(0))])]), Or([Compare(GetTag('let_var2'), [('==', Const(1))]), Compare(GetTag('let_var2'), [('==', Const(0))])])]), InjectFrom('Const(1)', Add((ProjectTo('Const(1)', let_var1), ProjectTo('Const(1)', let_var2)))), IfExp(And([Compare(GetTag('let_var1'), [('==', Const(3))]), Compare(GetTag('let_var2'), [('==', Const(3))])]), InjectFrom('Const(3)', CallFunc(Name('add'), [ProjectTo('Const(3)', let_var1), ProjectTo('Const(3)', let_var2)], None, None)), CallFunc(Name('error_pyobj'), [Const(1)], None, None)))))], None)]))

-------FLATTEN-------
tmp0 = 1
tmp1 = 2
tmp2 = tmp1
tmp4 = tmp0
tmp10 = tmp4 & 3
tmp9= equal_pyobj(tmp10, 1)
tmp12 = tmp4 & 3
tmp11= equal_pyobj(tmp12, 0)
tmp8 = tmp9 or tmp11
tmp15 = tmp2 & 3
tmp14= equal_pyobj(tmp15, 1)
tmp17 = tmp2 & 3
tmp16= equal_pyobj(tmp17, 0)
tmp13 = tmp14 or tmp16
tmp7 = tmp8 and tmp13
tmp6 = tmp7
if0 = tmp6
tmp20 = tmp4 >> 2
tmp21 = tmp2 >> 2
tmp22 = tmp20 + tmp21
tmp19 = tmp22 << 2
tmp19 = tmp19 | 1
tmp18 = tmp19
else0
tmp26 = tmp4 & 3
tmp25= equal_pyobj(tmp26, 3)
tmp28 = tmp2 & 3
tmp27= equal_pyobj(tmp28, 3)
tmp24 = tmp25 and tmp27
tmp23 = tmp24
if1 = tmp23
tmp33 = ~3
tmp32 = tmp32 & tmp33
tmp35 = ~3
tmp34 = tmp34 & tmp35
tmp31 = add(tmp32, tmp34)
tmp30 = tmp31 << 2
tmp30 = tmp30 | 3
tmp29 = tmp30
else1
tmp36 = error_pyobj(1)
tmp29 = tmp36
endif1
tmp18 = tmp29
endif0
tmp5 = tmp18
tmp3 = tmp5
print tmp3


-------AST_flat-------
Module(None, Stmt([Assign([AssName('tmp0', 'OP_ASSIGN')], Const(1)), Assign([AssName('tmp1', 'OP_ASSIGN')], Const(2)), Assign([AssName('tmp2', 'OP_ASSIGN')], Name('tmp1')), Assign([AssName('tmp4', 'OP_ASSIGN')], Name('tmp0')), Assign([AssName('tmp10', 'OP_ASSIGN')], Bitand([Name('tmp4'), Const(3)])), Assign([AssName('tmp9', 'OP_ASSIGN')], CallFunc(Name('equal_pyobj'), [Name('tmp10'), Const(1)], None, None)), Assign([AssName('tmp12', 'OP_ASSIGN')], Bitand([Name('tmp4'), Const(3)])), Assign([AssName('tmp11', 'OP_ASSIGN')], CallFunc(Name('equal_pyobj'), [Name('tmp12'), Const(0)], None, None)), Assign([AssName('tmp8', 'OP_ASSIGN')], Or([Name('tmp9'), Name('tmp11')])), Assign([AssName('tmp15', 'OP_ASSIGN')], Bitand([Name('tmp2'), Const(3)])), Assign([AssName('tmp14', 'OP_ASSIGN')], CallFunc(Name('equal_pyobj'), [Name('tmp15'), Const(1)], None, None)), Assign([AssName('tmp17', 'OP_ASSIGN')], Bitand([Name('tmp2'), Const(3)])), Assign([AssName('tmp16', 'OP_ASSIGN')], CallFunc(Name('equal_pyobj'), [Name('tmp17'), Const(0)], None, None)), Assign([AssName('tmp13', 'OP_ASSIGN')], Or([Name('tmp14'), Name('tmp16')])), Assign([AssName('tmp7', 'OP_ASSIGN')], And([Name('tmp8'), Name('tmp13')])), Assign([AssName('tmp6', 'OP_ASSIGN')], Name('tmp7')), Assign([AssName('if0', 'OP_ASSIGN')], Name('tmp6')), Assign([AssName('tmp20', 'OP_ASSIGN')], RightShift((Name('tmp4'), Const(2)))), Assign([AssName('tmp21', 'OP_ASSIGN')], RightShift((Name('tmp2'), Const(2)))), Assign([AssName('tmp22', 'OP_ASSIGN')], Add((Name('tmp20'), Name('tmp21')))), Assign([AssName('tmp19', 'OP_ASSIGN')], LeftShift((Name('tmp22'), Const(2)))), Assign([AssName('tmp19', 'OP_ASSIGN')], Bitor([Name('tmp19'), Const(1)])), Assign([AssName('tmp18', 'OP_ASSIGN')], Name('tmp19')), Discard(Name('else0')), Assign([AssName('tmp26', 'OP_ASSIGN')], Bitand([Name('tmp4'), Const(3)])), Assign([AssName('tmp25', 'OP_ASSIGN')], CallFunc(Name('equal_pyobj'), [Name('tmp26'), Const(3)], None, None)), Assign([AssName('tmp28', 'OP_ASSIGN')], Bitand([Name('tmp2'), Const(3)])), Assign([AssName('tmp27', 'OP_ASSIGN')], CallFunc(Name('equal_pyobj'), [Name('tmp28'), Const(3)], None, None)), Assign([AssName('tmp24', 'OP_ASSIGN')], And([Name('tmp25'), Name('tmp27')])), Assign([AssName('tmp23', 'OP_ASSIGN')], Name('tmp24')), Assign([AssName('if1', 'OP_ASSIGN')], Name('tmp23')), Assign([AssName('tmp33', 'OP_ASSIGN')], Invert(Const(3))), Assign([AssName('tmp32', 'OP_ASSIGN')], Bitand([Name('tmp32'), Name('tmp33')])), Assign([AssName('tmp35', 'OP_ASSIGN')], Invert(Const(3))), Assign([AssName('tmp34', 'OP_ASSIGN')], Bitand([Name('tmp34'), Name('tmp35')])), Assign([AssName('tmp31', 'OP_ASSIGN')], CallFunc(Name('add'), [Name('tmp32'), Name('tmp34')], None, None)), Assign([AssName('tmp30', 'OP_ASSIGN')], LeftShift((Name('tmp31'), Const(2)))), Assign([AssName('tmp30', 'OP_ASSIGN')], Bitor([Name('tmp30'), Const(3)])), Assign([AssName('tmp29', 'OP_ASSIGN')], Name('tmp30')), Discard(Name('else1')), Assign([AssName('tmp36', 'OP_ASSIGN')], CallFunc(Name('error_pyobj'), [Const(1)], None, None)), Assign([AssName('tmp29', 'OP_ASSIGN')], Name('tmp36')), Discard(Name('endif1')), Assign([AssName('tmp18', 'OP_ASSIGN')], Name('tmp29')), Discard(Name('endif0')), Assign([AssName('tmp5', 'OP_ASSIGN')], Name('tmp18')), Assign([AssName('tmp3', 'OP_ASSIGN')], Name('tmp5')), Printnl([Name('tmp3')], None)]))

-------x86_IR-------
['movl', '$1', 'tmp0']
['movl', '$2', 'tmp1']
['movl', 'tmp1', 'tmp2']
['movl', 'tmp0', 'tmp4']
['movl', 'tmp4', 'tmp37']
['and', 'tmp37', '$3']
['movl', 'tmp37', 'tmp10']
['call', 'equal_pyobj', ['tmp10', '$1']]
['movl', '%eax', 'tmp38']
['movl', 'tmp38', 'tmp9']
['movl', 'tmp4', 'tmp39']
['and', 'tmp39', '$3']
['movl', 'tmp39', 'tmp12']
['call', 'equal_pyobj', ['tmp12', '$0']]
['movl', '%eax', 'tmp40']
['movl', 'tmp40', 'tmp11']
['movl', 'tmp9', 'tmp41']
['or', 'tmp41', 'tmp11']
['movl', 'tmp41', 'tmp8']
['movl', 'tmp2', 'tmp42']
['and', 'tmp42', '$3']
['movl', 'tmp42', 'tmp15']
['call', 'equal_pyobj', ['tmp15', '$1']]
['movl', '%eax', 'tmp43']
['movl', 'tmp43', 'tmp14']
['movl', 'tmp2', 'tmp44']
['and', 'tmp44', '$3']
['movl', 'tmp44', 'tmp17']
['call', 'equal_pyobj', ['tmp17', '$0']]
['movl', '%eax', 'tmp45']
['movl', 'tmp45', 'tmp16']
['movl', 'tmp14', 'tmp46']
['or', 'tmp46', 'tmp16']
['movl', 'tmp46', 'tmp13']
['movl', 'tmp8', 'tmp47']
['and', 'tmp47', 'tmp13']
['movl', 'tmp47', 'tmp7']
['movl', 'tmp7', 'tmp6']
['if', 'tmp6', '0']
['movl', 'tmp4', 'tmp48']
['shr', 'tmp48', '$2']
['movl', 'tmp48', 'tmp20']
['movl', 'tmp2', 'tmp49']
['shr', 'tmp49', '$2']
['movl', 'tmp49', 'tmp21']
['movl', 'tmp21', 'tmp50']
['addl', 'tmp20', 'tmp50']
['movl', 'tmp50', 'tmp22']
['movl', 'tmp22', 'tmp51']
['shl', 'tmp51', '$2']
['movl', 'tmp51', 'tmp19']
['movl', 'tmp19', 'tmp52']
['or', 'tmp52', '$1']
['movl', 'tmp52', 'tmp19']
['movl', 'tmp19', 'tmp18']
['else', None, '0']
['movl', 'tmp4', 'tmp53']
['and', 'tmp53', '$3']
['movl', 'tmp53', 'tmp26']
['call', 'equal_pyobj', ['tmp26', '$3']]
['movl', '%eax', 'tmp54']
['movl', 'tmp54', 'tmp25']
['movl', 'tmp2', 'tmp55']
['and', 'tmp55', '$3']
['movl', 'tmp55', 'tmp28']
['call', 'equal_pyobj', ['tmp28', '$3']]
['movl', '%eax', 'tmp56']
['movl', 'tmp56', 'tmp27']
['movl', 'tmp25', 'tmp57']
['and', 'tmp57', 'tmp27']
['movl', 'tmp57', 'tmp24']
['movl', 'tmp24', 'tmp23']
['if', 'tmp23', '1']
['movl', '$3', 'tmp58']
['not', 'tmp58', None]
['movl', 'tmp58', 'tmp33']
['movl', 'tmp32', 'tmp59']
['and', 'tmp59', 'tmp33']
['movl', 'tmp59', 'tmp32']
['movl', '$3', 'tmp60']
['not', 'tmp60', None]
['movl', 'tmp60', 'tmp35']
['movl', 'tmp34', 'tmp61']
['and', 'tmp61', 'tmp35']
['movl', 'tmp61', 'tmp34']
['call', 'add', ['tmp32', 'tmp34']]
['movl', '%eax', 'tmp62']
['movl', 'tmp62', 'tmp31']
['movl', 'tmp31', 'tmp63']
['shl', 'tmp63', '$2']
['movl', 'tmp63', 'tmp30']
['movl', 'tmp30', 'tmp64']
['or', 'tmp64', '$3']
['movl', 'tmp64', 'tmp30']
['movl', 'tmp30', 'tmp29']
['else', None, '1']
['call', 'error_pyobj', ['$1']]
['movl', '%eax', 'tmp65']
['movl', 'tmp65', 'tmp36']
['movl', 'tmp36', 'tmp29']
['endif', None, '1']
['movl', 'tmp29', 'tmp18']
['endif', None, '0']
['movl', 'tmp18', 'tmp5']
['movl', 'tmp5', 'tmp3']
['print', 'tmp3', None]


107
106
('NODE: ', 0)
[['movl', '$1', 'tmp0'], ['movl', '$2', 'tmp1'], ['movl', 'tmp1', 'tmp2'], ['movl', 'tmp0', 'tmp4'], ['movl', 'tmp4', 'tmp37'], ['and', 'tmp37', '$3'], ['movl', 'tmp37', 'tmp10'], ['call', 'equal_pyobj', ['tmp10', '$1']], ['movl', '%eax', 'tmp38'], ['movl', 'tmp38', 'tmp9'], ['movl', 'tmp4', 'tmp39'], ['and', 'tmp39', '$3'], ['movl', 'tmp39', 'tmp12'], ['call', 'equal_pyobj', ['tmp12', '$0']], ['movl', '%eax', 'tmp40'], ['movl', 'tmp40', 'tmp11'], ['movl', 'tmp9', 'tmp41'], ['or', 'tmp41', 'tmp11'], ['movl', 'tmp41', 'tmp8'], ['movl', 'tmp2', 'tmp42'], ['and', 'tmp42', '$3'], ['movl', 'tmp42', 'tmp15'], ['call', 'equal_pyobj', ['tmp15', '$1']], ['movl', '%eax', 'tmp43'], ['movl', 'tmp43', 'tmp14'], ['movl', 'tmp2', 'tmp44'], ['and', 'tmp44', '$3'], ['movl', 'tmp44', 'tmp17'], ['call', 'equal_pyobj', ['tmp17', '$0']], ['movl', '%eax', 'tmp45'], ['movl', 'tmp45', 'tmp16'], ['movl', 'tmp14', 'tmp46'], ['or', 'tmp46', 'tmp16'], ['movl', 'tmp46', 'tmp13'], ['movl', 'tmp8', 'tmp47'], ['and', 'tmp47', 'tmp13'], ['movl', 'tmp47', 'tmp7'], ['movl', 'tmp7', 'tmp6'], ['if', 'tmp6', '0']]
CHILDREN: 
1
2
PARENTS: 
('NODE: ', 1)
[['movl', 'tmp4', 'tmp48'], ['shr', 'tmp48', '$2'], ['movl', 'tmp48', 'tmp20'], ['movl', 'tmp2', 'tmp49'], ['shr', 'tmp49', '$2'], ['movl', 'tmp49', 'tmp21'], ['movl', 'tmp21', 'tmp50'], ['addl', 'tmp20', 'tmp50'], ['movl', 'tmp50', 'tmp22'], ['movl', 'tmp22', 'tmp51'], ['shl', 'tmp51', '$2'], ['movl', 'tmp51', 'tmp19'], ['movl', 'tmp19', 'tmp52'], ['or', 'tmp52', '$1'], ['movl', 'tmp52', 'tmp19'], ['movl', 'tmp19', 'tmp18']]
CHILDREN: 
7
PARENTS: 
('NODE: ', 2)
[['else', None, '-1'], ['movl', 'tmp4', 'tmp53'], ['and', 'tmp53', '$3'], ['movl', 'tmp53', 'tmp26'], ['call', 'equal_pyobj', ['tmp26', '$3']], ['movl', '%eax', 'tmp54'], ['movl', 'tmp54', 'tmp25'], ['movl', 'tmp2', 'tmp55'], ['and', 'tmp55', '$3'], ['movl', 'tmp55', 'tmp28'], ['call', 'equal_pyobj', ['tmp28', '$3']], ['movl', '%eax', 'tmp56'], ['movl', 'tmp56', 'tmp27'], ['movl', 'tmp25', 'tmp57'], ['and', 'tmp57', 'tmp27'], ['movl', 'tmp57', 'tmp24'], ['movl', 'tmp24', 'tmp23'], ['if', 'tmp23', '1']]
CHILDREN: 
3
4
PARENTS: 
('NODE: ', 3)
[['movl', '$3', 'tmp58'], ['not', 'tmp58', None], ['movl', 'tmp58', 'tmp33'], ['movl', 'tmp32', 'tmp59'], ['and', 'tmp59', 'tmp33'], ['movl', 'tmp59', 'tmp32'], ['movl', '$3', 'tmp60'], ['not', 'tmp60', None], ['movl', 'tmp60', 'tmp35'], ['movl', 'tmp34', 'tmp61'], ['and', 'tmp61', 'tmp35'], ['movl', 'tmp61', 'tmp34'], ['call', 'add', ['tmp32', 'tmp34']], ['movl', '%eax', 'tmp62'], ['movl', 'tmp62', 'tmp31'], ['movl', 'tmp31', 'tmp63'], ['shl', 'tmp63', '$2'], ['movl', 'tmp63', 'tmp30'], ['movl', 'tmp30', 'tmp64'], ['or', 'tmp64', '$3'], ['movl', 'tmp64', 'tmp30'], ['movl', 'tmp30', 'tmp29']]
CHILDREN: 
5
PARENTS: 
('NODE: ', 4)
[['else', None, '-1'], ['call', 'error_pyobj', ['$1']], ['movl', '%eax', 'tmp65'], ['movl', 'tmp65', 'tmp36'], ['movl', 'tmp36', 'tmp29']]
CHILDREN: 
5
PARENTS: 
('NODE: ', 5)
[['endif', None, '1']]
CHILDREN: 
6
PARENTS: 
('NODE: ', 6)
[['movl', 'tmp29', 'tmp18']]
CHILDREN: 
7
PARENTS: 
('NODE: ', 7)
[['endif', None, '0']]
CHILDREN: 
8
PARENTS: 
('NODE: ', 8)
[['movl', 'tmp18', 'tmp5'], ['movl', 'tmp5', 'tmp3'], ['print', 'tmp3', None]]
CHILDREN: 
PARENTS: 
tmp49
tmp16
edi
tmp1
tmp65
tmp44
tmp9
tmp8
tmp5
tmp4
edx
ebx
tmp7
tmp3
tmp2
tmp24
tmp25
tmp40
tmp27
tmp20
tmp21
tmp22
tmp45
tmp60
tmp61
tmp62
tmp63
tmp64
tmp29
tmp0
tmp47
tmp37
esi
tmp42
tmp43
tmp13
eax
tmp41
tmp14
tmp46
tmp48
ecx
tmp51
tmp50
tmp53
tmp52
tmp55
tmp54
tmp57
tmp56
tmp59
tmp58
tmp39
tmp38
tmp19
tmp18
tmp33
tmp32
tmp31
tmp30
tmp11
tmp36
tmp35
tmp34
