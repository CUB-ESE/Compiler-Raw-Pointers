Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE
    DIVIDE
    TIMES

Grammar

Rule 0     S' -> program
Rule 1     program -> module
Rule 2     module -> statements
Rule 3     simple_statement -> PRINT expression
Rule 4     simple_statement -> target ASSIGN expression
Rule 5     simple_statement -> expression
Rule 6     simple_statement -> target
Rule 7     expression -> NAME
Rule 8     expression -> TRUE
Rule 9     expression -> FALSE
Rule 10    expression -> INT
Rule 11    expression -> FLOAT
Rule 12    expression -> LPAREN expression RPAREN
Rule 13    expression -> MINUS expression
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> INPUT LPAREN RPAREN
Rule 16    empty -> <empty>
Rule 17    expression -> NOT expression
Rule 18    expression -> expression AND expression
Rule 19    expression -> expression OR expression
Rule 20    expression -> expression EQ expression
Rule 21    expression -> expression NEQ expression
Rule 22    expression -> expression IS expression
Rule 23    expression -> expression IF expression ELSE expression
Rule 24    expression -> LSQUARE expr_list RSQUARE
Rule 25    expression -> LCURLY key_datum_list RCURLY
Rule 26    expression -> subscription
Rule 27    subscription -> expression LSQUARE expression RSQUARE
Rule 28    target -> NAME
Rule 29    target -> NAME LPAREN expression RPAREN
Rule 30    target -> subscription
Rule 31    key_datum -> expression COLON expression
Rule 32    key_datum_list -> empty
Rule 33    key_datum_list -> key_datum
Rule 34    key_datum_list -> key_datum_list COMMA key_datum
Rule 35    expr_list -> empty
Rule 36    expr_list -> expression
Rule 37    expr_list -> expr_list COMMA expression
Rule 38    expression -> expression LPAREN expr_list RPAREN
Rule 39    expression -> LAMBDA id_list COLON expression
Rule 40    id_list -> empty
Rule 41    id_list -> NAME
Rule 42    id_list -> id_list COMMA NAME
Rule 43    statement -> simple_statement
Rule 44    statement -> compound_statement
Rule 45    simple_statement -> RETURN expression
Rule 46    compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite
Rule 47    suite -> INDENT statements DEDENT
Rule 48    statements -> statement
Rule 49    statements -> statements statement
Rule 50    simple_statement -> IF expression COLON suite ELSE COLON suite
Rule 51    simple_statement -> WHILE expression COLON suite

Terminals, with rules where they appear

AND                  : 18
ASSIGN               : 4
COLON                : 31 39 46 50 50 51
COMMA                : 34 37 42
DEDENT               : 47
DEF                  : 46
DIVIDE               : 
ELSE                 : 23 50
EQ                   : 20
FALSE                : 9
FLOAT                : 11
IF                   : 23 50
INDENT               : 47
INPUT                : 15
INT                  : 10
IS                   : 22
LAMBDA               : 39
LCURLY               : 25
LPAREN               : 12 15 29 38 46
LSQUARE              : 24 27
MINUS                : 13
NAME                 : 7 28 29 41 42 46
NEQ                  : 21
NEWLINE              : 
NOT                  : 17
OR                   : 19
PLUS                 : 14
PRINT                : 3
RCURLY               : 25
RETURN               : 45
RPAREN               : 12 15 29 38 46
RSQUARE              : 24 27
TIMES                : 
TRUE                 : 8
WHILE                : 51
error                : 

Nonterminals, with rules where they appear

compound_statement   : 44
empty                : 32 35 40
expr_list            : 24 37 38
expression           : 3 4 5 12 13 14 14 17 18 18 19 19 20 20 21 21 22 22 23 23 23 27 27 29 31 31 36 37 38 39 45 50 51
id_list              : 39 42 46
key_datum            : 33 34
key_datum_list       : 25 34
module               : 1
program              : 0
simple_statement     : 43
statement            : 48 49
statements           : 2 47 49
subscription         : 26 30
suite                : 46 50 50 51
target               : 4 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . module
    (2) module -> . statements
    (48) statements -> . statement
    (49) statements -> . statements statement
    (43) statement -> . simple_statement
    (44) statement -> . compound_statement
    (3) simple_statement -> . PRINT expression
    (4) simple_statement -> . target ASSIGN expression
    (5) simple_statement -> . expression
    (6) simple_statement -> . target
    (45) simple_statement -> . RETURN expression
    (50) simple_statement -> . IF expression COLON suite ELSE COLON suite
    (51) simple_statement -> . WHILE expression COLON suite
    (46) compound_statement -> . DEF NAME LPAREN id_list RPAREN COLON suite
    (28) target -> . NAME
    (29) target -> . NAME LPAREN expression RPAREN
    (30) target -> . subscription
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    PRINT           shift and go to state 7
    RETURN          shift and go to state 8
    IF              shift and go to state 6
    WHILE           shift and go to state 5
    DEF             shift and go to state 11
    NAME            shift and go to state 18
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    statements                     shift and go to state 1
    target                         shift and go to state 20
    compound_statement             shift and go to state 12
    simple_statement               shift and go to state 3
    module                         shift and go to state 4
    program                        shift and go to state 13
    statement                      shift and go to state 14
    expression                     shift and go to state 25
    subscription                   shift and go to state 15

state 1

    (2) module -> statements .
    (49) statements -> statements . statement
    (43) statement -> . simple_statement
    (44) statement -> . compound_statement
    (3) simple_statement -> . PRINT expression
    (4) simple_statement -> . target ASSIGN expression
    (5) simple_statement -> . expression
    (6) simple_statement -> . target
    (45) simple_statement -> . RETURN expression
    (50) simple_statement -> . IF expression COLON suite ELSE COLON suite
    (51) simple_statement -> . WHILE expression COLON suite
    (46) compound_statement -> . DEF NAME LPAREN id_list RPAREN COLON suite
    (28) target -> . NAME
    (29) target -> . NAME LPAREN expression RPAREN
    (30) target -> . subscription
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    $end            reduce using rule 2 (module -> statements .)
    PRINT           shift and go to state 7
    RETURN          shift and go to state 8
    IF              shift and go to state 6
    WHILE           shift and go to state 5
    DEF             shift and go to state 11
    NAME            shift and go to state 18
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    target                         shift and go to state 20
    compound_statement             shift and go to state 12
    simple_statement               shift and go to state 3
    statement                      shift and go to state 27
    expression                     shift and go to state 25
    subscription                   shift and go to state 15

state 2

    (24) expression -> LSQUARE . expr_list RSQUARE
    (35) expr_list -> . empty
    (36) expr_list -> . expression
    (37) expr_list -> . expr_list COMMA expression
    (16) empty -> .
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    RSQUARE         reduce using rule 16 (empty -> .)
    COMMA           reduce using rule 16 (empty -> .)
    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expr_list                      shift and go to state 28
    expression                     shift and go to state 32
    empty                          shift and go to state 30
    subscription                   shift and go to state 29

state 3

    (43) statement -> simple_statement .

    DEDENT          reduce using rule 43 (statement -> simple_statement .)
    PRINT           reduce using rule 43 (statement -> simple_statement .)
    RETURN          reduce using rule 43 (statement -> simple_statement .)
    IF              reduce using rule 43 (statement -> simple_statement .)
    WHILE           reduce using rule 43 (statement -> simple_statement .)
    DEF             reduce using rule 43 (statement -> simple_statement .)
    NAME            reduce using rule 43 (statement -> simple_statement .)
    TRUE            reduce using rule 43 (statement -> simple_statement .)
    FALSE           reduce using rule 43 (statement -> simple_statement .)
    INT             reduce using rule 43 (statement -> simple_statement .)
    FLOAT           reduce using rule 43 (statement -> simple_statement .)
    LPAREN          reduce using rule 43 (statement -> simple_statement .)
    MINUS           reduce using rule 43 (statement -> simple_statement .)
    INPUT           reduce using rule 43 (statement -> simple_statement .)
    NOT             reduce using rule 43 (statement -> simple_statement .)
    LSQUARE         reduce using rule 43 (statement -> simple_statement .)
    LCURLY          reduce using rule 43 (statement -> simple_statement .)
    LAMBDA          reduce using rule 43 (statement -> simple_statement .)
    $end            reduce using rule 43 (statement -> simple_statement .)


state 4

    (1) program -> module .

    $end            reduce using rule 1 (program -> module .)


state 5

    (51) simple_statement -> WHILE . expression COLON suite
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 33
    subscription                   shift and go to state 29

state 6

    (50) simple_statement -> IF . expression COLON suite ELSE COLON suite
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 34
    subscription                   shift and go to state 29

state 7

    (3) simple_statement -> PRINT . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 35
    subscription                   shift and go to state 29

state 8

    (45) simple_statement -> RETURN . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 36
    subscription                   shift and go to state 29

state 9

    (8) expression -> TRUE .

    PLUS            reduce using rule 8 (expression -> TRUE .)
    AND             reduce using rule 8 (expression -> TRUE .)
    OR              reduce using rule 8 (expression -> TRUE .)
    EQ              reduce using rule 8 (expression -> TRUE .)
    NEQ             reduce using rule 8 (expression -> TRUE .)
    IS              reduce using rule 8 (expression -> TRUE .)
    IF              reduce using rule 8 (expression -> TRUE .)
    LPAREN          reduce using rule 8 (expression -> TRUE .)
    LSQUARE         reduce using rule 8 (expression -> TRUE .)
    RSQUARE         reduce using rule 8 (expression -> TRUE .)
    COMMA           reduce using rule 8 (expression -> TRUE .)
    RPAREN          reduce using rule 8 (expression -> TRUE .)
    RCURLY          reduce using rule 8 (expression -> TRUE .)
    PRINT           reduce using rule 8 (expression -> TRUE .)
    RETURN          reduce using rule 8 (expression -> TRUE .)
    WHILE           reduce using rule 8 (expression -> TRUE .)
    DEF             reduce using rule 8 (expression -> TRUE .)
    NAME            reduce using rule 8 (expression -> TRUE .)
    TRUE            reduce using rule 8 (expression -> TRUE .)
    FALSE           reduce using rule 8 (expression -> TRUE .)
    INT             reduce using rule 8 (expression -> TRUE .)
    FLOAT           reduce using rule 8 (expression -> TRUE .)
    MINUS           reduce using rule 8 (expression -> TRUE .)
    INPUT           reduce using rule 8 (expression -> TRUE .)
    NOT             reduce using rule 8 (expression -> TRUE .)
    LCURLY          reduce using rule 8 (expression -> TRUE .)
    LAMBDA          reduce using rule 8 (expression -> TRUE .)
    $end            reduce using rule 8 (expression -> TRUE .)
    COLON           reduce using rule 8 (expression -> TRUE .)
    DEDENT          reduce using rule 8 (expression -> TRUE .)
    ELSE            reduce using rule 8 (expression -> TRUE .)


state 10

    (13) expression -> MINUS . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 37
    subscription                   shift and go to state 29

state 11

    (46) compound_statement -> DEF . NAME LPAREN id_list RPAREN COLON suite

    NAME            shift and go to state 38


state 12

    (44) statement -> compound_statement .

    DEDENT          reduce using rule 44 (statement -> compound_statement .)
    PRINT           reduce using rule 44 (statement -> compound_statement .)
    RETURN          reduce using rule 44 (statement -> compound_statement .)
    IF              reduce using rule 44 (statement -> compound_statement .)
    WHILE           reduce using rule 44 (statement -> compound_statement .)
    DEF             reduce using rule 44 (statement -> compound_statement .)
    NAME            reduce using rule 44 (statement -> compound_statement .)
    TRUE            reduce using rule 44 (statement -> compound_statement .)
    FALSE           reduce using rule 44 (statement -> compound_statement .)
    INT             reduce using rule 44 (statement -> compound_statement .)
    FLOAT           reduce using rule 44 (statement -> compound_statement .)
    LPAREN          reduce using rule 44 (statement -> compound_statement .)
    MINUS           reduce using rule 44 (statement -> compound_statement .)
    INPUT           reduce using rule 44 (statement -> compound_statement .)
    NOT             reduce using rule 44 (statement -> compound_statement .)
    LSQUARE         reduce using rule 44 (statement -> compound_statement .)
    LCURLY          reduce using rule 44 (statement -> compound_statement .)
    LAMBDA          reduce using rule 44 (statement -> compound_statement .)
    $end            reduce using rule 44 (statement -> compound_statement .)


state 13

    (0) S' -> program .



state 14

    (48) statements -> statement .

    PRINT           reduce using rule 48 (statements -> statement .)
    RETURN          reduce using rule 48 (statements -> statement .)
    IF              reduce using rule 48 (statements -> statement .)
    WHILE           reduce using rule 48 (statements -> statement .)
    DEF             reduce using rule 48 (statements -> statement .)
    NAME            reduce using rule 48 (statements -> statement .)
    TRUE            reduce using rule 48 (statements -> statement .)
    FALSE           reduce using rule 48 (statements -> statement .)
    INT             reduce using rule 48 (statements -> statement .)
    FLOAT           reduce using rule 48 (statements -> statement .)
    LPAREN          reduce using rule 48 (statements -> statement .)
    MINUS           reduce using rule 48 (statements -> statement .)
    INPUT           reduce using rule 48 (statements -> statement .)
    NOT             reduce using rule 48 (statements -> statement .)
    LSQUARE         reduce using rule 48 (statements -> statement .)
    LCURLY          reduce using rule 48 (statements -> statement .)
    LAMBDA          reduce using rule 48 (statements -> statement .)
    $end            reduce using rule 48 (statements -> statement .)
    DEDENT          reduce using rule 48 (statements -> statement .)


state 15

    (30) target -> subscription .
    (26) expression -> subscription .

  ! reduce/reduce conflict for IF resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for LPAREN resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for LSQUARE resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for PRINT resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for RETURN resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for WHILE resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for DEF resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for NAME resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for TRUE resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for FALSE resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for INT resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for FLOAT resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for MINUS resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for INPUT resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for NOT resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for LCURLY resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for LAMBDA resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for $end resolved using rule 26 (expression -> subscription .)
  ! reduce/reduce conflict for DEDENT resolved using rule 26 (expression -> subscription .)
    ASSIGN          reduce using rule 30 (target -> subscription .)
    PLUS            reduce using rule 26 (expression -> subscription .)
    AND             reduce using rule 26 (expression -> subscription .)
    OR              reduce using rule 26 (expression -> subscription .)
    EQ              reduce using rule 26 (expression -> subscription .)
    NEQ             reduce using rule 26 (expression -> subscription .)
    IS              reduce using rule 26 (expression -> subscription .)
    IF              reduce using rule 26 (expression -> subscription .)
    LPAREN          reduce using rule 26 (expression -> subscription .)
    LSQUARE         reduce using rule 26 (expression -> subscription .)
    PRINT           reduce using rule 26 (expression -> subscription .)
    RETURN          reduce using rule 26 (expression -> subscription .)
    WHILE           reduce using rule 26 (expression -> subscription .)
    DEF             reduce using rule 26 (expression -> subscription .)
    NAME            reduce using rule 26 (expression -> subscription .)
    TRUE            reduce using rule 26 (expression -> subscription .)
    FALSE           reduce using rule 26 (expression -> subscription .)
    INT             reduce using rule 26 (expression -> subscription .)
    FLOAT           reduce using rule 26 (expression -> subscription .)
    MINUS           reduce using rule 26 (expression -> subscription .)
    INPUT           reduce using rule 26 (expression -> subscription .)
    NOT             reduce using rule 26 (expression -> subscription .)
    LCURLY          reduce using rule 26 (expression -> subscription .)
    LAMBDA          reduce using rule 26 (expression -> subscription .)
    $end            reduce using rule 26 (expression -> subscription .)
    DEDENT          reduce using rule 26 (expression -> subscription .)

  ! PRINT           [ reduce using rule 30 (target -> subscription .) ]
  ! RETURN          [ reduce using rule 30 (target -> subscription .) ]
  ! IF              [ reduce using rule 30 (target -> subscription .) ]
  ! WHILE           [ reduce using rule 30 (target -> subscription .) ]
  ! DEF             [ reduce using rule 30 (target -> subscription .) ]
  ! NAME            [ reduce using rule 30 (target -> subscription .) ]
  ! TRUE            [ reduce using rule 30 (target -> subscription .) ]
  ! FALSE           [ reduce using rule 30 (target -> subscription .) ]
  ! INT             [ reduce using rule 30 (target -> subscription .) ]
  ! FLOAT           [ reduce using rule 30 (target -> subscription .) ]
  ! LPAREN          [ reduce using rule 30 (target -> subscription .) ]
  ! MINUS           [ reduce using rule 30 (target -> subscription .) ]
  ! INPUT           [ reduce using rule 30 (target -> subscription .) ]
  ! NOT             [ reduce using rule 30 (target -> subscription .) ]
  ! LSQUARE         [ reduce using rule 30 (target -> subscription .) ]
  ! LCURLY          [ reduce using rule 30 (target -> subscription .) ]
  ! LAMBDA          [ reduce using rule 30 (target -> subscription .) ]
  ! $end            [ reduce using rule 30 (target -> subscription .) ]
  ! DEDENT          [ reduce using rule 30 (target -> subscription .) ]


state 16

    (12) expression -> LPAREN . expression RPAREN
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 39
    subscription                   shift and go to state 29

state 17

    (15) expression -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 40


state 18

    (28) target -> NAME .
    (29) target -> NAME . LPAREN expression RPAREN
    (7) expression -> NAME .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for IF resolved using rule 7 (expression -> NAME .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for LSQUARE resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for DEF resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for NAME resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for TRUE resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for FALSE resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for INT resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for FLOAT resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for INPUT resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for NOT resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for LCURLY resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for LAMBDA resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 7 (expression -> NAME .)
  ! reduce/reduce conflict for DEDENT resolved using rule 7 (expression -> NAME .)
    ASSIGN          reduce using rule 28 (target -> NAME .)
    LPAREN          shift and go to state 41
    PLUS            reduce using rule 7 (expression -> NAME .)
    AND             reduce using rule 7 (expression -> NAME .)
    OR              reduce using rule 7 (expression -> NAME .)
    EQ              reduce using rule 7 (expression -> NAME .)
    NEQ             reduce using rule 7 (expression -> NAME .)
    IS              reduce using rule 7 (expression -> NAME .)
    IF              reduce using rule 7 (expression -> NAME .)
    LSQUARE         reduce using rule 7 (expression -> NAME .)
    PRINT           reduce using rule 7 (expression -> NAME .)
    RETURN          reduce using rule 7 (expression -> NAME .)
    WHILE           reduce using rule 7 (expression -> NAME .)
    DEF             reduce using rule 7 (expression -> NAME .)
    NAME            reduce using rule 7 (expression -> NAME .)
    TRUE            reduce using rule 7 (expression -> NAME .)
    FALSE           reduce using rule 7 (expression -> NAME .)
    INT             reduce using rule 7 (expression -> NAME .)
    FLOAT           reduce using rule 7 (expression -> NAME .)
    MINUS           reduce using rule 7 (expression -> NAME .)
    INPUT           reduce using rule 7 (expression -> NAME .)
    NOT             reduce using rule 7 (expression -> NAME .)
    LCURLY          reduce using rule 7 (expression -> NAME .)
    LAMBDA          reduce using rule 7 (expression -> NAME .)
    $end            reduce using rule 7 (expression -> NAME .)
    DEDENT          reduce using rule 7 (expression -> NAME .)

  ! PRINT           [ reduce using rule 28 (target -> NAME .) ]
  ! RETURN          [ reduce using rule 28 (target -> NAME .) ]
  ! IF              [ reduce using rule 28 (target -> NAME .) ]
  ! WHILE           [ reduce using rule 28 (target -> NAME .) ]
  ! DEF             [ reduce using rule 28 (target -> NAME .) ]
  ! NAME            [ reduce using rule 28 (target -> NAME .) ]
  ! TRUE            [ reduce using rule 28 (target -> NAME .) ]
  ! FALSE           [ reduce using rule 28 (target -> NAME .) ]
  ! INT             [ reduce using rule 28 (target -> NAME .) ]
  ! FLOAT           [ reduce using rule 28 (target -> NAME .) ]
  ! LPAREN          [ reduce using rule 28 (target -> NAME .) ]
  ! MINUS           [ reduce using rule 28 (target -> NAME .) ]
  ! INPUT           [ reduce using rule 28 (target -> NAME .) ]
  ! NOT             [ reduce using rule 28 (target -> NAME .) ]
  ! LSQUARE         [ reduce using rule 28 (target -> NAME .) ]
  ! LCURLY          [ reduce using rule 28 (target -> NAME .) ]
  ! LAMBDA          [ reduce using rule 28 (target -> NAME .) ]
  ! $end            [ reduce using rule 28 (target -> NAME .) ]
  ! DEDENT          [ reduce using rule 28 (target -> NAME .) ]
  ! LPAREN          [ reduce using rule 7 (expression -> NAME .) ]


state 19

    (9) expression -> FALSE .

    PLUS            reduce using rule 9 (expression -> FALSE .)
    AND             reduce using rule 9 (expression -> FALSE .)
    OR              reduce using rule 9 (expression -> FALSE .)
    EQ              reduce using rule 9 (expression -> FALSE .)
    NEQ             reduce using rule 9 (expression -> FALSE .)
    IS              reduce using rule 9 (expression -> FALSE .)
    IF              reduce using rule 9 (expression -> FALSE .)
    LPAREN          reduce using rule 9 (expression -> FALSE .)
    LSQUARE         reduce using rule 9 (expression -> FALSE .)
    RSQUARE         reduce using rule 9 (expression -> FALSE .)
    COMMA           reduce using rule 9 (expression -> FALSE .)
    RPAREN          reduce using rule 9 (expression -> FALSE .)
    RCURLY          reduce using rule 9 (expression -> FALSE .)
    PRINT           reduce using rule 9 (expression -> FALSE .)
    RETURN          reduce using rule 9 (expression -> FALSE .)
    WHILE           reduce using rule 9 (expression -> FALSE .)
    DEF             reduce using rule 9 (expression -> FALSE .)
    NAME            reduce using rule 9 (expression -> FALSE .)
    TRUE            reduce using rule 9 (expression -> FALSE .)
    FALSE           reduce using rule 9 (expression -> FALSE .)
    INT             reduce using rule 9 (expression -> FALSE .)
    FLOAT           reduce using rule 9 (expression -> FALSE .)
    MINUS           reduce using rule 9 (expression -> FALSE .)
    INPUT           reduce using rule 9 (expression -> FALSE .)
    NOT             reduce using rule 9 (expression -> FALSE .)
    LCURLY          reduce using rule 9 (expression -> FALSE .)
    LAMBDA          reduce using rule 9 (expression -> FALSE .)
    $end            reduce using rule 9 (expression -> FALSE .)
    COLON           reduce using rule 9 (expression -> FALSE .)
    DEDENT          reduce using rule 9 (expression -> FALSE .)
    ELSE            reduce using rule 9 (expression -> FALSE .)


state 20

    (4) simple_statement -> target . ASSIGN expression
    (6) simple_statement -> target .

    ASSIGN          shift and go to state 42
    PRINT           reduce using rule 6 (simple_statement -> target .)
    RETURN          reduce using rule 6 (simple_statement -> target .)
    IF              reduce using rule 6 (simple_statement -> target .)
    WHILE           reduce using rule 6 (simple_statement -> target .)
    DEF             reduce using rule 6 (simple_statement -> target .)
    NAME            reduce using rule 6 (simple_statement -> target .)
    TRUE            reduce using rule 6 (simple_statement -> target .)
    FALSE           reduce using rule 6 (simple_statement -> target .)
    INT             reduce using rule 6 (simple_statement -> target .)
    FLOAT           reduce using rule 6 (simple_statement -> target .)
    LPAREN          reduce using rule 6 (simple_statement -> target .)
    MINUS           reduce using rule 6 (simple_statement -> target .)
    INPUT           reduce using rule 6 (simple_statement -> target .)
    NOT             reduce using rule 6 (simple_statement -> target .)
    LSQUARE         reduce using rule 6 (simple_statement -> target .)
    LCURLY          reduce using rule 6 (simple_statement -> target .)
    LAMBDA          reduce using rule 6 (simple_statement -> target .)
    $end            reduce using rule 6 (simple_statement -> target .)
    DEDENT          reduce using rule 6 (simple_statement -> target .)


state 21

    (25) expression -> LCURLY . key_datum_list RCURLY
    (32) key_datum_list -> . empty
    (33) key_datum_list -> . key_datum
    (34) key_datum_list -> . key_datum_list COMMA key_datum
    (16) empty -> .
    (31) key_datum -> . expression COLON expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    RCURLY          reduce using rule 16 (empty -> .)
    COMMA           reduce using rule 16 (empty -> .)
    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    key_datum                      shift and go to state 44
    key_datum_list                 shift and go to state 45
    expression                     shift and go to state 46
    empty                          shift and go to state 43
    subscription                   shift and go to state 29

state 22

    (10) expression -> INT .

    PLUS            reduce using rule 10 (expression -> INT .)
    AND             reduce using rule 10 (expression -> INT .)
    OR              reduce using rule 10 (expression -> INT .)
    EQ              reduce using rule 10 (expression -> INT .)
    NEQ             reduce using rule 10 (expression -> INT .)
    IS              reduce using rule 10 (expression -> INT .)
    IF              reduce using rule 10 (expression -> INT .)
    LPAREN          reduce using rule 10 (expression -> INT .)
    LSQUARE         reduce using rule 10 (expression -> INT .)
    RSQUARE         reduce using rule 10 (expression -> INT .)
    COMMA           reduce using rule 10 (expression -> INT .)
    RPAREN          reduce using rule 10 (expression -> INT .)
    RCURLY          reduce using rule 10 (expression -> INT .)
    PRINT           reduce using rule 10 (expression -> INT .)
    RETURN          reduce using rule 10 (expression -> INT .)
    WHILE           reduce using rule 10 (expression -> INT .)
    DEF             reduce using rule 10 (expression -> INT .)
    NAME            reduce using rule 10 (expression -> INT .)
    TRUE            reduce using rule 10 (expression -> INT .)
    FALSE           reduce using rule 10 (expression -> INT .)
    INT             reduce using rule 10 (expression -> INT .)
    FLOAT           reduce using rule 10 (expression -> INT .)
    MINUS           reduce using rule 10 (expression -> INT .)
    INPUT           reduce using rule 10 (expression -> INT .)
    NOT             reduce using rule 10 (expression -> INT .)
    LCURLY          reduce using rule 10 (expression -> INT .)
    LAMBDA          reduce using rule 10 (expression -> INT .)
    $end            reduce using rule 10 (expression -> INT .)
    COLON           reduce using rule 10 (expression -> INT .)
    DEDENT          reduce using rule 10 (expression -> INT .)
    ELSE            reduce using rule 10 (expression -> INT .)


state 23

    (11) expression -> FLOAT .

    PLUS            reduce using rule 11 (expression -> FLOAT .)
    AND             reduce using rule 11 (expression -> FLOAT .)
    OR              reduce using rule 11 (expression -> FLOAT .)
    EQ              reduce using rule 11 (expression -> FLOAT .)
    NEQ             reduce using rule 11 (expression -> FLOAT .)
    IS              reduce using rule 11 (expression -> FLOAT .)
    IF              reduce using rule 11 (expression -> FLOAT .)
    LPAREN          reduce using rule 11 (expression -> FLOAT .)
    LSQUARE         reduce using rule 11 (expression -> FLOAT .)
    RSQUARE         reduce using rule 11 (expression -> FLOAT .)
    COMMA           reduce using rule 11 (expression -> FLOAT .)
    RPAREN          reduce using rule 11 (expression -> FLOAT .)
    RCURLY          reduce using rule 11 (expression -> FLOAT .)
    PRINT           reduce using rule 11 (expression -> FLOAT .)
    RETURN          reduce using rule 11 (expression -> FLOAT .)
    WHILE           reduce using rule 11 (expression -> FLOAT .)
    DEF             reduce using rule 11 (expression -> FLOAT .)
    NAME            reduce using rule 11 (expression -> FLOAT .)
    TRUE            reduce using rule 11 (expression -> FLOAT .)
    FALSE           reduce using rule 11 (expression -> FLOAT .)
    INT             reduce using rule 11 (expression -> FLOAT .)
    FLOAT           reduce using rule 11 (expression -> FLOAT .)
    MINUS           reduce using rule 11 (expression -> FLOAT .)
    INPUT           reduce using rule 11 (expression -> FLOAT .)
    NOT             reduce using rule 11 (expression -> FLOAT .)
    LCURLY          reduce using rule 11 (expression -> FLOAT .)
    LAMBDA          reduce using rule 11 (expression -> FLOAT .)
    $end            reduce using rule 11 (expression -> FLOAT .)
    COLON           reduce using rule 11 (expression -> FLOAT .)
    DEDENT          reduce using rule 11 (expression -> FLOAT .)
    ELSE            reduce using rule 11 (expression -> FLOAT .)


state 24

    (17) expression -> NOT . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 47
    subscription                   shift and go to state 29

state 25

    (5) simple_statement -> expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    PRINT           reduce using rule 5 (simple_statement -> expression .)
    RETURN          reduce using rule 5 (simple_statement -> expression .)
    WHILE           reduce using rule 5 (simple_statement -> expression .)
    DEF             reduce using rule 5 (simple_statement -> expression .)
    NAME            reduce using rule 5 (simple_statement -> expression .)
    TRUE            reduce using rule 5 (simple_statement -> expression .)
    FALSE           reduce using rule 5 (simple_statement -> expression .)
    INT             reduce using rule 5 (simple_statement -> expression .)
    FLOAT           reduce using rule 5 (simple_statement -> expression .)
    MINUS           reduce using rule 5 (simple_statement -> expression .)
    INPUT           reduce using rule 5 (simple_statement -> expression .)
    NOT             reduce using rule 5 (simple_statement -> expression .)
    LCURLY          reduce using rule 5 (simple_statement -> expression .)
    LAMBDA          reduce using rule 5 (simple_statement -> expression .)
    $end            reduce using rule 5 (simple_statement -> expression .)
    DEDENT          reduce using rule 5 (simple_statement -> expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! IF              [ reduce using rule 5 (simple_statement -> expression .) ]
  ! LPAREN          [ reduce using rule 5 (simple_statement -> expression .) ]
  ! LSQUARE         [ reduce using rule 5 (simple_statement -> expression .) ]


state 26

    (39) expression -> LAMBDA . id_list COLON expression
    (40) id_list -> . empty
    (41) id_list -> . NAME
    (42) id_list -> . id_list COMMA NAME
    (16) empty -> .

    NAME            shift and go to state 57
    COLON           reduce using rule 16 (empty -> .)
    COMMA           reduce using rule 16 (empty -> .)

    id_list                        shift and go to state 58
    empty                          shift and go to state 59

state 27

    (49) statements -> statements statement .

    PRINT           reduce using rule 49 (statements -> statements statement .)
    RETURN          reduce using rule 49 (statements -> statements statement .)
    IF              reduce using rule 49 (statements -> statements statement .)
    WHILE           reduce using rule 49 (statements -> statements statement .)
    DEF             reduce using rule 49 (statements -> statements statement .)
    NAME            reduce using rule 49 (statements -> statements statement .)
    TRUE            reduce using rule 49 (statements -> statements statement .)
    FALSE           reduce using rule 49 (statements -> statements statement .)
    INT             reduce using rule 49 (statements -> statements statement .)
    FLOAT           reduce using rule 49 (statements -> statements statement .)
    LPAREN          reduce using rule 49 (statements -> statements statement .)
    MINUS           reduce using rule 49 (statements -> statements statement .)
    INPUT           reduce using rule 49 (statements -> statements statement .)
    NOT             reduce using rule 49 (statements -> statements statement .)
    LSQUARE         reduce using rule 49 (statements -> statements statement .)
    LCURLY          reduce using rule 49 (statements -> statements statement .)
    LAMBDA          reduce using rule 49 (statements -> statements statement .)
    $end            reduce using rule 49 (statements -> statements statement .)
    DEDENT          reduce using rule 49 (statements -> statements statement .)


state 28

    (24) expression -> LSQUARE expr_list . RSQUARE
    (37) expr_list -> expr_list . COMMA expression

    RSQUARE         shift and go to state 60
    COMMA           shift and go to state 61


state 29

    (26) expression -> subscription .

    PLUS            reduce using rule 26 (expression -> subscription .)
    AND             reduce using rule 26 (expression -> subscription .)
    OR              reduce using rule 26 (expression -> subscription .)
    EQ              reduce using rule 26 (expression -> subscription .)
    NEQ             reduce using rule 26 (expression -> subscription .)
    IS              reduce using rule 26 (expression -> subscription .)
    IF              reduce using rule 26 (expression -> subscription .)
    LPAREN          reduce using rule 26 (expression -> subscription .)
    LSQUARE         reduce using rule 26 (expression -> subscription .)
    RSQUARE         reduce using rule 26 (expression -> subscription .)
    COMMA           reduce using rule 26 (expression -> subscription .)
    RPAREN          reduce using rule 26 (expression -> subscription .)
    RCURLY          reduce using rule 26 (expression -> subscription .)
    PRINT           reduce using rule 26 (expression -> subscription .)
    RETURN          reduce using rule 26 (expression -> subscription .)
    WHILE           reduce using rule 26 (expression -> subscription .)
    DEF             reduce using rule 26 (expression -> subscription .)
    NAME            reduce using rule 26 (expression -> subscription .)
    TRUE            reduce using rule 26 (expression -> subscription .)
    FALSE           reduce using rule 26 (expression -> subscription .)
    INT             reduce using rule 26 (expression -> subscription .)
    FLOAT           reduce using rule 26 (expression -> subscription .)
    MINUS           reduce using rule 26 (expression -> subscription .)
    INPUT           reduce using rule 26 (expression -> subscription .)
    NOT             reduce using rule 26 (expression -> subscription .)
    LCURLY          reduce using rule 26 (expression -> subscription .)
    LAMBDA          reduce using rule 26 (expression -> subscription .)
    $end            reduce using rule 26 (expression -> subscription .)
    COLON           reduce using rule 26 (expression -> subscription .)
    DEDENT          reduce using rule 26 (expression -> subscription .)
    ELSE            reduce using rule 26 (expression -> subscription .)


state 30

    (35) expr_list -> empty .

    RSQUARE         reduce using rule 35 (expr_list -> empty .)
    COMMA           reduce using rule 35 (expr_list -> empty .)
    RPAREN          reduce using rule 35 (expr_list -> empty .)


state 31

    (7) expression -> NAME .

    PLUS            reduce using rule 7 (expression -> NAME .)
    AND             reduce using rule 7 (expression -> NAME .)
    OR              reduce using rule 7 (expression -> NAME .)
    EQ              reduce using rule 7 (expression -> NAME .)
    NEQ             reduce using rule 7 (expression -> NAME .)
    IS              reduce using rule 7 (expression -> NAME .)
    IF              reduce using rule 7 (expression -> NAME .)
    LPAREN          reduce using rule 7 (expression -> NAME .)
    LSQUARE         reduce using rule 7 (expression -> NAME .)
    RSQUARE         reduce using rule 7 (expression -> NAME .)
    COMMA           reduce using rule 7 (expression -> NAME .)
    RPAREN          reduce using rule 7 (expression -> NAME .)
    RCURLY          reduce using rule 7 (expression -> NAME .)
    PRINT           reduce using rule 7 (expression -> NAME .)
    RETURN          reduce using rule 7 (expression -> NAME .)
    WHILE           reduce using rule 7 (expression -> NAME .)
    DEF             reduce using rule 7 (expression -> NAME .)
    NAME            reduce using rule 7 (expression -> NAME .)
    TRUE            reduce using rule 7 (expression -> NAME .)
    FALSE           reduce using rule 7 (expression -> NAME .)
    INT             reduce using rule 7 (expression -> NAME .)
    FLOAT           reduce using rule 7 (expression -> NAME .)
    MINUS           reduce using rule 7 (expression -> NAME .)
    INPUT           reduce using rule 7 (expression -> NAME .)
    NOT             reduce using rule 7 (expression -> NAME .)
    LCURLY          reduce using rule 7 (expression -> NAME .)
    LAMBDA          reduce using rule 7 (expression -> NAME .)
    $end            reduce using rule 7 (expression -> NAME .)
    COLON           reduce using rule 7 (expression -> NAME .)
    DEDENT          reduce using rule 7 (expression -> NAME .)
    ELSE            reduce using rule 7 (expression -> NAME .)


state 32

    (36) expr_list -> expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    RSQUARE         reduce using rule 36 (expr_list -> expression .)
    COMMA           reduce using rule 36 (expr_list -> expression .)
    RPAREN          reduce using rule 36 (expr_list -> expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 33

    (51) simple_statement -> WHILE expression . COLON suite
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    COLON           shift and go to state 62
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 34

    (50) simple_statement -> IF expression . COLON suite ELSE COLON suite
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    COLON           shift and go to state 63
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 35

    (3) simple_statement -> PRINT expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    PRINT           reduce using rule 3 (simple_statement -> PRINT expression .)
    RETURN          reduce using rule 3 (simple_statement -> PRINT expression .)
    WHILE           reduce using rule 3 (simple_statement -> PRINT expression .)
    DEF             reduce using rule 3 (simple_statement -> PRINT expression .)
    NAME            reduce using rule 3 (simple_statement -> PRINT expression .)
    TRUE            reduce using rule 3 (simple_statement -> PRINT expression .)
    FALSE           reduce using rule 3 (simple_statement -> PRINT expression .)
    INT             reduce using rule 3 (simple_statement -> PRINT expression .)
    FLOAT           reduce using rule 3 (simple_statement -> PRINT expression .)
    MINUS           reduce using rule 3 (simple_statement -> PRINT expression .)
    INPUT           reduce using rule 3 (simple_statement -> PRINT expression .)
    NOT             reduce using rule 3 (simple_statement -> PRINT expression .)
    LCURLY          reduce using rule 3 (simple_statement -> PRINT expression .)
    LAMBDA          reduce using rule 3 (simple_statement -> PRINT expression .)
    $end            reduce using rule 3 (simple_statement -> PRINT expression .)
    DEDENT          reduce using rule 3 (simple_statement -> PRINT expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! IF              [ reduce using rule 3 (simple_statement -> PRINT expression .) ]
  ! LPAREN          [ reduce using rule 3 (simple_statement -> PRINT expression .) ]
  ! LSQUARE         [ reduce using rule 3 (simple_statement -> PRINT expression .) ]


state 36

    (45) simple_statement -> RETURN expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    PRINT           reduce using rule 45 (simple_statement -> RETURN expression .)
    RETURN          reduce using rule 45 (simple_statement -> RETURN expression .)
    WHILE           reduce using rule 45 (simple_statement -> RETURN expression .)
    DEF             reduce using rule 45 (simple_statement -> RETURN expression .)
    NAME            reduce using rule 45 (simple_statement -> RETURN expression .)
    TRUE            reduce using rule 45 (simple_statement -> RETURN expression .)
    FALSE           reduce using rule 45 (simple_statement -> RETURN expression .)
    INT             reduce using rule 45 (simple_statement -> RETURN expression .)
    FLOAT           reduce using rule 45 (simple_statement -> RETURN expression .)
    MINUS           reduce using rule 45 (simple_statement -> RETURN expression .)
    INPUT           reduce using rule 45 (simple_statement -> RETURN expression .)
    NOT             reduce using rule 45 (simple_statement -> RETURN expression .)
    LCURLY          reduce using rule 45 (simple_statement -> RETURN expression .)
    LAMBDA          reduce using rule 45 (simple_statement -> RETURN expression .)
    $end            reduce using rule 45 (simple_statement -> RETURN expression .)
    DEDENT          reduce using rule 45 (simple_statement -> RETURN expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! IF              [ reduce using rule 45 (simple_statement -> RETURN expression .) ]
  ! LPAREN          [ reduce using rule 45 (simple_statement -> RETURN expression .) ]
  ! LSQUARE         [ reduce using rule 45 (simple_statement -> RETURN expression .) ]


state 37

    (13) expression -> MINUS expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 13 (expression -> MINUS expression .)
    AND             reduce using rule 13 (expression -> MINUS expression .)
    OR              reduce using rule 13 (expression -> MINUS expression .)
    EQ              reduce using rule 13 (expression -> MINUS expression .)
    NEQ             reduce using rule 13 (expression -> MINUS expression .)
    IS              reduce using rule 13 (expression -> MINUS expression .)
    IF              reduce using rule 13 (expression -> MINUS expression .)
    LPAREN          reduce using rule 13 (expression -> MINUS expression .)
    LSQUARE         reduce using rule 13 (expression -> MINUS expression .)
    RSQUARE         reduce using rule 13 (expression -> MINUS expression .)
    COMMA           reduce using rule 13 (expression -> MINUS expression .)
    RPAREN          reduce using rule 13 (expression -> MINUS expression .)
    RCURLY          reduce using rule 13 (expression -> MINUS expression .)
    PRINT           reduce using rule 13 (expression -> MINUS expression .)
    RETURN          reduce using rule 13 (expression -> MINUS expression .)
    WHILE           reduce using rule 13 (expression -> MINUS expression .)
    DEF             reduce using rule 13 (expression -> MINUS expression .)
    NAME            reduce using rule 13 (expression -> MINUS expression .)
    TRUE            reduce using rule 13 (expression -> MINUS expression .)
    FALSE           reduce using rule 13 (expression -> MINUS expression .)
    INT             reduce using rule 13 (expression -> MINUS expression .)
    FLOAT           reduce using rule 13 (expression -> MINUS expression .)
    MINUS           reduce using rule 13 (expression -> MINUS expression .)
    INPUT           reduce using rule 13 (expression -> MINUS expression .)
    NOT             reduce using rule 13 (expression -> MINUS expression .)
    LCURLY          reduce using rule 13 (expression -> MINUS expression .)
    LAMBDA          reduce using rule 13 (expression -> MINUS expression .)
    $end            reduce using rule 13 (expression -> MINUS expression .)
    COLON           reduce using rule 13 (expression -> MINUS expression .)
    DEDENT          reduce using rule 13 (expression -> MINUS expression .)
    ELSE            reduce using rule 13 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 50 ]
  ! NEQ             [ shift and go to state 56 ]
  ! IS              [ shift and go to state 51 ]
  ! IF              [ shift and go to state 54 ]
  ! LPAREN          [ shift and go to state 53 ]
  ! LSQUARE         [ shift and go to state 49 ]


state 38

    (46) compound_statement -> DEF NAME . LPAREN id_list RPAREN COLON suite

    LPAREN          shift and go to state 64


state 39

    (12) expression -> LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    RPAREN          shift and go to state 65
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 40

    (15) expression -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 66


state 41

    (29) target -> NAME LPAREN . expression RPAREN
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 67
    subscription                   shift and go to state 29

state 42

    (4) simple_statement -> target ASSIGN . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 68
    subscription                   shift and go to state 29

state 43

    (32) key_datum_list -> empty .

    RCURLY          reduce using rule 32 (key_datum_list -> empty .)
    COMMA           reduce using rule 32 (key_datum_list -> empty .)


state 44

    (33) key_datum_list -> key_datum .

    RCURLY          reduce using rule 33 (key_datum_list -> key_datum .)
    COMMA           reduce using rule 33 (key_datum_list -> key_datum .)


state 45

    (25) expression -> LCURLY key_datum_list . RCURLY
    (34) key_datum_list -> key_datum_list . COMMA key_datum

    RCURLY          shift and go to state 70
    COMMA           shift and go to state 69


state 46

    (31) key_datum -> expression . COLON expression
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    COLON           shift and go to state 71
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 47

    (17) expression -> NOT expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 17 (expression -> NOT expression .)
    COMMA           reduce using rule 17 (expression -> NOT expression .)
    RPAREN          reduce using rule 17 (expression -> NOT expression .)
    RCURLY          reduce using rule 17 (expression -> NOT expression .)
    PRINT           reduce using rule 17 (expression -> NOT expression .)
    RETURN          reduce using rule 17 (expression -> NOT expression .)
    WHILE           reduce using rule 17 (expression -> NOT expression .)
    DEF             reduce using rule 17 (expression -> NOT expression .)
    NAME            reduce using rule 17 (expression -> NOT expression .)
    TRUE            reduce using rule 17 (expression -> NOT expression .)
    FALSE           reduce using rule 17 (expression -> NOT expression .)
    INT             reduce using rule 17 (expression -> NOT expression .)
    FLOAT           reduce using rule 17 (expression -> NOT expression .)
    MINUS           reduce using rule 17 (expression -> NOT expression .)
    INPUT           reduce using rule 17 (expression -> NOT expression .)
    NOT             reduce using rule 17 (expression -> NOT expression .)
    LCURLY          reduce using rule 17 (expression -> NOT expression .)
    LAMBDA          reduce using rule 17 (expression -> NOT expression .)
    $end            reduce using rule 17 (expression -> NOT expression .)
    COLON           reduce using rule 17 (expression -> NOT expression .)
    DEDENT          reduce using rule 17 (expression -> NOT expression .)
    ELSE            reduce using rule 17 (expression -> NOT expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 17 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 17 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! IS              [ reduce using rule 17 (expression -> NOT expression .) ]
  ! IF              [ reduce using rule 17 (expression -> NOT expression .) ]
  ! LPAREN          [ reduce using rule 17 (expression -> NOT expression .) ]
  ! LSQUARE         [ reduce using rule 17 (expression -> NOT expression .) ]


state 48

    (18) expression -> expression AND . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 72
    subscription                   shift and go to state 29

state 49

    (27) subscription -> expression LSQUARE . expression RSQUARE
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 73
    subscription                   shift and go to state 29

state 50

    (20) expression -> expression EQ . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 74
    subscription                   shift and go to state 29

state 51

    (22) expression -> expression IS . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 75
    subscription                   shift and go to state 29

state 52

    (14) expression -> expression PLUS . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 76
    subscription                   shift and go to state 29

state 53

    (38) expression -> expression LPAREN . expr_list RPAREN
    (35) expr_list -> . empty
    (36) expr_list -> . expression
    (37) expr_list -> . expr_list COMMA expression
    (16) empty -> .
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    RPAREN          reduce using rule 16 (empty -> .)
    COMMA           reduce using rule 16 (empty -> .)
    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expr_list                      shift and go to state 77
    expression                     shift and go to state 32
    empty                          shift and go to state 30
    subscription                   shift and go to state 29

state 54

    (23) expression -> expression IF . expression ELSE expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 78
    subscription                   shift and go to state 29

state 55

    (19) expression -> expression OR . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 79
    subscription                   shift and go to state 29

state 56

    (21) expression -> expression NEQ . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 80
    subscription                   shift and go to state 29

state 57

    (41) id_list -> NAME .

    COLON           reduce using rule 41 (id_list -> NAME .)
    COMMA           reduce using rule 41 (id_list -> NAME .)
    RPAREN          reduce using rule 41 (id_list -> NAME .)


state 58

    (39) expression -> LAMBDA id_list . COLON expression
    (42) id_list -> id_list . COMMA NAME

    COLON           shift and go to state 82
    COMMA           shift and go to state 81


state 59

    (40) id_list -> empty .

    COLON           reduce using rule 40 (id_list -> empty .)
    COMMA           reduce using rule 40 (id_list -> empty .)
    RPAREN          reduce using rule 40 (id_list -> empty .)


state 60

    (24) expression -> LSQUARE expr_list RSQUARE .

    PLUS            reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    AND             reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    OR              reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    EQ              reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    NEQ             reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    IS              reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    IF              reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    LPAREN          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    LSQUARE         reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    RSQUARE         reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    COMMA           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    RPAREN          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    RCURLY          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    PRINT           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    RETURN          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    WHILE           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    DEF             reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    NAME            reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    TRUE            reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    FALSE           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    INT             reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    FLOAT           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    MINUS           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    INPUT           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    NOT             reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    LCURLY          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    LAMBDA          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    $end            reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    COLON           reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    DEDENT          reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)
    ELSE            reduce using rule 24 (expression -> LSQUARE expr_list RSQUARE .)


state 61

    (37) expr_list -> expr_list COMMA . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 83
    subscription                   shift and go to state 29

state 62

    (51) simple_statement -> WHILE expression COLON . suite
    (47) suite -> . INDENT statements DEDENT

    INDENT          shift and go to state 84

    suite                          shift and go to state 85

state 63

    (50) simple_statement -> IF expression COLON . suite ELSE COLON suite
    (47) suite -> . INDENT statements DEDENT

    INDENT          shift and go to state 84

    suite                          shift and go to state 86

state 64

    (46) compound_statement -> DEF NAME LPAREN . id_list RPAREN COLON suite
    (40) id_list -> . empty
    (41) id_list -> . NAME
    (42) id_list -> . id_list COMMA NAME
    (16) empty -> .

    NAME            shift and go to state 57
    RPAREN          reduce using rule 16 (empty -> .)
    COMMA           reduce using rule 16 (empty -> .)

    id_list                        shift and go to state 87
    empty                          shift and go to state 59

state 65

    (12) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    IS              reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    LSQUARE         reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RSQUARE         reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RCURLY          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    NAME            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    INT             reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    INPUT           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    LCURLY          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    LAMBDA          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    DEDENT          reduce using rule 12 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 12 (expression -> LPAREN expression RPAREN .)


state 66

    (15) expression -> INPUT LPAREN RPAREN .

    PLUS            reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    AND             reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    OR              reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    EQ              reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    NEQ             reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    IS              reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    IF              reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    LPAREN          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    LSQUARE         reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    RSQUARE         reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    COMMA           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    RPAREN          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    RCURLY          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    PRINT           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    RETURN          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    WHILE           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    DEF             reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    NAME            reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    TRUE            reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    FALSE           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    INT             reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    FLOAT           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    MINUS           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    INPUT           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    NOT             reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    LCURLY          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    LAMBDA          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    $end            reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    COLON           reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    DEDENT          reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)
    ELSE            reduce using rule 15 (expression -> INPUT LPAREN RPAREN .)


state 67

    (29) target -> NAME LPAREN expression . RPAREN
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    RPAREN          shift and go to state 88
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 68

    (4) simple_statement -> target ASSIGN expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    PRINT           reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    RETURN          reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    WHILE           reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    DEF             reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    NAME            reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    TRUE            reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    FALSE           reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    INT             reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    FLOAT           reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    MINUS           reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    INPUT           reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    NOT             reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    LCURLY          reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    LAMBDA          reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    $end            reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    DEDENT          reduce using rule 4 (simple_statement -> target ASSIGN expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! IF              [ reduce using rule 4 (simple_statement -> target ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 4 (simple_statement -> target ASSIGN expression .) ]
  ! LSQUARE         [ reduce using rule 4 (simple_statement -> target ASSIGN expression .) ]


state 69

    (34) key_datum_list -> key_datum_list COMMA . key_datum
    (31) key_datum -> . expression COLON expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    key_datum                      shift and go to state 89
    expression                     shift and go to state 46
    subscription                   shift and go to state 29

state 70

    (25) expression -> LCURLY key_datum_list RCURLY .

    PLUS            reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    AND             reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    OR              reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    EQ              reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    NEQ             reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    IS              reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    IF              reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    LPAREN          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    LSQUARE         reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    RSQUARE         reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    COMMA           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    RPAREN          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    RCURLY          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    PRINT           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    RETURN          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    WHILE           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    DEF             reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    NAME            reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    TRUE            reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    FALSE           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    INT             reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    FLOAT           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    MINUS           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    INPUT           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    NOT             reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    LCURLY          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    LAMBDA          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    $end            reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    COLON           reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    DEDENT          reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)
    ELSE            reduce using rule 25 (expression -> LCURLY key_datum_list RCURLY .)


state 71

    (31) key_datum -> expression COLON . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 90
    subscription                   shift and go to state 29

state 72

    (18) expression -> expression AND expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 18 (expression -> expression AND expression .)
    COMMA           reduce using rule 18 (expression -> expression AND expression .)
    RPAREN          reduce using rule 18 (expression -> expression AND expression .)
    RCURLY          reduce using rule 18 (expression -> expression AND expression .)
    PRINT           reduce using rule 18 (expression -> expression AND expression .)
    RETURN          reduce using rule 18 (expression -> expression AND expression .)
    WHILE           reduce using rule 18 (expression -> expression AND expression .)
    DEF             reduce using rule 18 (expression -> expression AND expression .)
    NAME            reduce using rule 18 (expression -> expression AND expression .)
    TRUE            reduce using rule 18 (expression -> expression AND expression .)
    FALSE           reduce using rule 18 (expression -> expression AND expression .)
    INT             reduce using rule 18 (expression -> expression AND expression .)
    FLOAT           reduce using rule 18 (expression -> expression AND expression .)
    MINUS           reduce using rule 18 (expression -> expression AND expression .)
    INPUT           reduce using rule 18 (expression -> expression AND expression .)
    NOT             reduce using rule 18 (expression -> expression AND expression .)
    LCURLY          reduce using rule 18 (expression -> expression AND expression .)
    LAMBDA          reduce using rule 18 (expression -> expression AND expression .)
    $end            reduce using rule 18 (expression -> expression AND expression .)
    COLON           reduce using rule 18 (expression -> expression AND expression .)
    DEDENT          reduce using rule 18 (expression -> expression AND expression .)
    ELSE            reduce using rule 18 (expression -> expression AND expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! IS              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! IF              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LSQUARE         [ reduce using rule 18 (expression -> expression AND expression .) ]


state 73

    (27) subscription -> expression LSQUARE expression . RSQUARE
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    RSQUARE         shift and go to state 91
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 74

    (20) expression -> expression EQ expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 20 (expression -> expression EQ expression .)
    COMMA           reduce using rule 20 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 20 (expression -> expression EQ expression .)
    RCURLY          reduce using rule 20 (expression -> expression EQ expression .)
    PRINT           reduce using rule 20 (expression -> expression EQ expression .)
    RETURN          reduce using rule 20 (expression -> expression EQ expression .)
    WHILE           reduce using rule 20 (expression -> expression EQ expression .)
    DEF             reduce using rule 20 (expression -> expression EQ expression .)
    NAME            reduce using rule 20 (expression -> expression EQ expression .)
    TRUE            reduce using rule 20 (expression -> expression EQ expression .)
    FALSE           reduce using rule 20 (expression -> expression EQ expression .)
    INT             reduce using rule 20 (expression -> expression EQ expression .)
    FLOAT           reduce using rule 20 (expression -> expression EQ expression .)
    MINUS           reduce using rule 20 (expression -> expression EQ expression .)
    INPUT           reduce using rule 20 (expression -> expression EQ expression .)
    NOT             reduce using rule 20 (expression -> expression EQ expression .)
    LCURLY          reduce using rule 20 (expression -> expression EQ expression .)
    LAMBDA          reduce using rule 20 (expression -> expression EQ expression .)
    $end            reduce using rule 20 (expression -> expression EQ expression .)
    COLON           reduce using rule 20 (expression -> expression EQ expression .)
    DEDENT          reduce using rule 20 (expression -> expression EQ expression .)
    ELSE            reduce using rule 20 (expression -> expression EQ expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! IS              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! IF              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! LPAREN          [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! LSQUARE         [ reduce using rule 20 (expression -> expression EQ expression .) ]


state 75

    (22) expression -> expression IS expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 22 (expression -> expression IS expression .)
    COMMA           reduce using rule 22 (expression -> expression IS expression .)
    RPAREN          reduce using rule 22 (expression -> expression IS expression .)
    RCURLY          reduce using rule 22 (expression -> expression IS expression .)
    PRINT           reduce using rule 22 (expression -> expression IS expression .)
    RETURN          reduce using rule 22 (expression -> expression IS expression .)
    WHILE           reduce using rule 22 (expression -> expression IS expression .)
    DEF             reduce using rule 22 (expression -> expression IS expression .)
    NAME            reduce using rule 22 (expression -> expression IS expression .)
    TRUE            reduce using rule 22 (expression -> expression IS expression .)
    FALSE           reduce using rule 22 (expression -> expression IS expression .)
    INT             reduce using rule 22 (expression -> expression IS expression .)
    FLOAT           reduce using rule 22 (expression -> expression IS expression .)
    MINUS           reduce using rule 22 (expression -> expression IS expression .)
    INPUT           reduce using rule 22 (expression -> expression IS expression .)
    NOT             reduce using rule 22 (expression -> expression IS expression .)
    LCURLY          reduce using rule 22 (expression -> expression IS expression .)
    LAMBDA          reduce using rule 22 (expression -> expression IS expression .)
    $end            reduce using rule 22 (expression -> expression IS expression .)
    COLON           reduce using rule 22 (expression -> expression IS expression .)
    DEDENT          reduce using rule 22 (expression -> expression IS expression .)
    ELSE            reduce using rule 22 (expression -> expression IS expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! IS              [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! IF              [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! LPAREN          [ reduce using rule 22 (expression -> expression IS expression .) ]
  ! LSQUARE         [ reduce using rule 22 (expression -> expression IS expression .) ]


state 76

    (14) expression -> expression PLUS expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
    AND             reduce using rule 14 (expression -> expression PLUS expression .)
    OR              reduce using rule 14 (expression -> expression PLUS expression .)
    EQ              reduce using rule 14 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 14 (expression -> expression PLUS expression .)
    IS              reduce using rule 14 (expression -> expression PLUS expression .)
    IF              reduce using rule 14 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    LSQUARE         reduce using rule 14 (expression -> expression PLUS expression .)
    RSQUARE         reduce using rule 14 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    RCURLY          reduce using rule 14 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 14 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 14 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 14 (expression -> expression PLUS expression .)
    DEF             reduce using rule 14 (expression -> expression PLUS expression .)
    NAME            reduce using rule 14 (expression -> expression PLUS expression .)
    TRUE            reduce using rule 14 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 14 (expression -> expression PLUS expression .)
    INT             reduce using rule 14 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 14 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
    INPUT           reduce using rule 14 (expression -> expression PLUS expression .)
    NOT             reduce using rule 14 (expression -> expression PLUS expression .)
    LCURLY          reduce using rule 14 (expression -> expression PLUS expression .)
    LAMBDA          reduce using rule 14 (expression -> expression PLUS expression .)
    $end            reduce using rule 14 (expression -> expression PLUS expression .)
    COLON           reduce using rule 14 (expression -> expression PLUS expression .)
    DEDENT          reduce using rule 14 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 14 (expression -> expression PLUS expression .)

  ! PLUS            [ shift and go to state 52 ]
  ! AND             [ shift and go to state 48 ]
  ! OR              [ shift and go to state 55 ]
  ! EQ              [ shift and go to state 50 ]
  ! NEQ             [ shift and go to state 56 ]
  ! IS              [ shift and go to state 51 ]
  ! IF              [ shift and go to state 54 ]
  ! LPAREN          [ shift and go to state 53 ]
  ! LSQUARE         [ shift and go to state 49 ]


state 77

    (38) expression -> expression LPAREN expr_list . RPAREN
    (37) expr_list -> expr_list . COMMA expression

    RPAREN          shift and go to state 92
    COMMA           shift and go to state 61


state 78

    (23) expression -> expression IF expression . ELSE expression
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    ELSE            shift and go to state 93
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 79

    (19) expression -> expression OR expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 19 (expression -> expression OR expression .)
    COMMA           reduce using rule 19 (expression -> expression OR expression .)
    RPAREN          reduce using rule 19 (expression -> expression OR expression .)
    RCURLY          reduce using rule 19 (expression -> expression OR expression .)
    PRINT           reduce using rule 19 (expression -> expression OR expression .)
    RETURN          reduce using rule 19 (expression -> expression OR expression .)
    WHILE           reduce using rule 19 (expression -> expression OR expression .)
    DEF             reduce using rule 19 (expression -> expression OR expression .)
    NAME            reduce using rule 19 (expression -> expression OR expression .)
    TRUE            reduce using rule 19 (expression -> expression OR expression .)
    FALSE           reduce using rule 19 (expression -> expression OR expression .)
    INT             reduce using rule 19 (expression -> expression OR expression .)
    FLOAT           reduce using rule 19 (expression -> expression OR expression .)
    MINUS           reduce using rule 19 (expression -> expression OR expression .)
    INPUT           reduce using rule 19 (expression -> expression OR expression .)
    NOT             reduce using rule 19 (expression -> expression OR expression .)
    LCURLY          reduce using rule 19 (expression -> expression OR expression .)
    LAMBDA          reduce using rule 19 (expression -> expression OR expression .)
    $end            reduce using rule 19 (expression -> expression OR expression .)
    COLON           reduce using rule 19 (expression -> expression OR expression .)
    DEDENT          reduce using rule 19 (expression -> expression OR expression .)
    ELSE            reduce using rule 19 (expression -> expression OR expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! IS              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! IF              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LSQUARE         [ reduce using rule 19 (expression -> expression OR expression .) ]


state 80

    (21) expression -> expression NEQ expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 21 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 21 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 21 (expression -> expression NEQ expression .)
    RCURLY          reduce using rule 21 (expression -> expression NEQ expression .)
    PRINT           reduce using rule 21 (expression -> expression NEQ expression .)
    RETURN          reduce using rule 21 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 21 (expression -> expression NEQ expression .)
    DEF             reduce using rule 21 (expression -> expression NEQ expression .)
    NAME            reduce using rule 21 (expression -> expression NEQ expression .)
    TRUE            reduce using rule 21 (expression -> expression NEQ expression .)
    FALSE           reduce using rule 21 (expression -> expression NEQ expression .)
    INT             reduce using rule 21 (expression -> expression NEQ expression .)
    FLOAT           reduce using rule 21 (expression -> expression NEQ expression .)
    MINUS           reduce using rule 21 (expression -> expression NEQ expression .)
    INPUT           reduce using rule 21 (expression -> expression NEQ expression .)
    NOT             reduce using rule 21 (expression -> expression NEQ expression .)
    LCURLY          reduce using rule 21 (expression -> expression NEQ expression .)
    LAMBDA          reduce using rule 21 (expression -> expression NEQ expression .)
    $end            reduce using rule 21 (expression -> expression NEQ expression .)
    COLON           reduce using rule 21 (expression -> expression NEQ expression .)
    DEDENT          reduce using rule 21 (expression -> expression NEQ expression .)
    ELSE            reduce using rule 21 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! IS              [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! IF              [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! LSQUARE         [ reduce using rule 21 (expression -> expression NEQ expression .) ]


state 81

    (42) id_list -> id_list COMMA . NAME

    NAME            shift and go to state 94


state 82

    (39) expression -> LAMBDA id_list COLON . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    subscription                   shift and go to state 29
    expression                     shift and go to state 95

state 83

    (37) expr_list -> expr_list COMMA expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    RSQUARE         reduce using rule 37 (expr_list -> expr_list COMMA expression .)
    COMMA           reduce using rule 37 (expr_list -> expr_list COMMA expression .)
    RPAREN          reduce using rule 37 (expr_list -> expr_list COMMA expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 84

    (47) suite -> INDENT . statements DEDENT
    (48) statements -> . statement
    (49) statements -> . statements statement
    (43) statement -> . simple_statement
    (44) statement -> . compound_statement
    (3) simple_statement -> . PRINT expression
    (4) simple_statement -> . target ASSIGN expression
    (5) simple_statement -> . expression
    (6) simple_statement -> . target
    (45) simple_statement -> . RETURN expression
    (50) simple_statement -> . IF expression COLON suite ELSE COLON suite
    (51) simple_statement -> . WHILE expression COLON suite
    (46) compound_statement -> . DEF NAME LPAREN id_list RPAREN COLON suite
    (28) target -> . NAME
    (29) target -> . NAME LPAREN expression RPAREN
    (30) target -> . subscription
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    PRINT           shift and go to state 7
    RETURN          shift and go to state 8
    IF              shift and go to state 6
    WHILE           shift and go to state 5
    DEF             shift and go to state 11
    NAME            shift and go to state 18
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    statements                     shift and go to state 96
    target                         shift and go to state 20
    compound_statement             shift and go to state 12
    simple_statement               shift and go to state 3
    statement                      shift and go to state 14
    expression                     shift and go to state 25
    subscription                   shift and go to state 15

state 85

    (51) simple_statement -> WHILE expression COLON suite .

    PRINT           reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    RETURN          reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    IF              reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    WHILE           reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    DEF             reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    NAME            reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    TRUE            reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    FALSE           reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    INT             reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    FLOAT           reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    LPAREN          reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    MINUS           reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    INPUT           reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    NOT             reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    LSQUARE         reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    LCURLY          reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    LAMBDA          reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    $end            reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)
    DEDENT          reduce using rule 51 (simple_statement -> WHILE expression COLON suite .)


state 86

    (50) simple_statement -> IF expression COLON suite . ELSE COLON suite

    ELSE            shift and go to state 97


state 87

    (46) compound_statement -> DEF NAME LPAREN id_list . RPAREN COLON suite
    (42) id_list -> id_list . COMMA NAME

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 81


state 88

    (29) target -> NAME LPAREN expression RPAREN .

    ASSIGN          reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    PRINT           reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    RETURN          reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    IF              reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    WHILE           reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    DEF             reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    NAME            reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    TRUE            reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    FALSE           reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    INT             reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    FLOAT           reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    LPAREN          reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    INPUT           reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    NOT             reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    LSQUARE         reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    LCURLY          reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    LAMBDA          reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    $end            reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)
    DEDENT          reduce using rule 29 (target -> NAME LPAREN expression RPAREN .)


state 89

    (34) key_datum_list -> key_datum_list COMMA key_datum .

    RCURLY          reduce using rule 34 (key_datum_list -> key_datum_list COMMA key_datum .)
    COMMA           reduce using rule 34 (key_datum_list -> key_datum_list COMMA key_datum .)


state 90

    (31) key_datum -> expression COLON expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

    RCURLY          reduce using rule 31 (key_datum -> expression COLON expression .)
    COMMA           reduce using rule 31 (key_datum -> expression COLON expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49


state 91

    (27) subscription -> expression LSQUARE expression RSQUARE .

    COLON           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    AND             reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    OR              reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    EQ              reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    NEQ             reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    IS              reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    IF              reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    LPAREN          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    LSQUARE         reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    ASSIGN          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    DEDENT          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    PRINT           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    RETURN          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    WHILE           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    DEF             reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    NAME            reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    TRUE            reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    FALSE           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    INT             reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    FLOAT           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    INPUT           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    NOT             reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    LCURLY          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    LAMBDA          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    $end            reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    RPAREN          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    COMMA           reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    ELSE            reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)
    RCURLY          reduce using rule 27 (subscription -> expression LSQUARE expression RSQUARE .)


state 92

    (38) expression -> expression LPAREN expr_list RPAREN .

    PLUS            reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    AND             reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    OR              reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    EQ              reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    NEQ             reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    IS              reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    IF              reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    LPAREN          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    LSQUARE         reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    RSQUARE         reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    COMMA           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    RPAREN          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    RCURLY          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    PRINT           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    RETURN          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    WHILE           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    DEF             reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    NAME            reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    TRUE            reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    FALSE           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    INT             reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    FLOAT           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    MINUS           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    INPUT           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    NOT             reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    LCURLY          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    LAMBDA          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    $end            reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    COLON           reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    DEDENT          reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)
    ELSE            reduce using rule 38 (expression -> expression LPAREN expr_list RPAREN .)


state 93

    (23) expression -> expression IF expression ELSE . expression
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    NAME            shift and go to state 31
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    expression                     shift and go to state 99
    subscription                   shift and go to state 29

state 94

    (42) id_list -> id_list COMMA NAME .

    COLON           reduce using rule 42 (id_list -> id_list COMMA NAME .)
    COMMA           reduce using rule 42 (id_list -> id_list COMMA NAME .)
    RPAREN          reduce using rule 42 (id_list -> id_list COMMA NAME .)


state 95

    (39) expression -> LAMBDA id_list COLON expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    COMMA           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    RPAREN          reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    RCURLY          reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    PRINT           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    RETURN          reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    WHILE           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    DEF             reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    NAME            reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    TRUE            reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    FALSE           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    INT             reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    FLOAT           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    MINUS           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    INPUT           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    NOT             reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    LCURLY          reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    LAMBDA          reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    $end            reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    COLON           reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    DEDENT          reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    ELSE            reduce using rule 39 (expression -> LAMBDA id_list COLON expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! AND             [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! OR              [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! EQ              [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! NEQ             [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! IS              [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! IF              [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! LPAREN          [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]
  ! LSQUARE         [ reduce using rule 39 (expression -> LAMBDA id_list COLON expression .) ]


state 96

    (47) suite -> INDENT statements . DEDENT
    (49) statements -> statements . statement
    (43) statement -> . simple_statement
    (44) statement -> . compound_statement
    (3) simple_statement -> . PRINT expression
    (4) simple_statement -> . target ASSIGN expression
    (5) simple_statement -> . expression
    (6) simple_statement -> . target
    (45) simple_statement -> . RETURN expression
    (50) simple_statement -> . IF expression COLON suite ELSE COLON suite
    (51) simple_statement -> . WHILE expression COLON suite
    (46) compound_statement -> . DEF NAME LPAREN id_list RPAREN COLON suite
    (28) target -> . NAME
    (29) target -> . NAME LPAREN expression RPAREN
    (30) target -> . subscription
    (7) expression -> . NAME
    (8) expression -> . TRUE
    (9) expression -> . FALSE
    (10) expression -> . INT
    (11) expression -> . FLOAT
    (12) expression -> . LPAREN expression RPAREN
    (13) expression -> . MINUS expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . INPUT LPAREN RPAREN
    (17) expression -> . NOT expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression IS expression
    (23) expression -> . expression IF expression ELSE expression
    (24) expression -> . LSQUARE expr_list RSQUARE
    (25) expression -> . LCURLY key_datum_list RCURLY
    (26) expression -> . subscription
    (38) expression -> . expression LPAREN expr_list RPAREN
    (39) expression -> . LAMBDA id_list COLON expression
    (27) subscription -> . expression LSQUARE expression RSQUARE

    DEDENT          shift and go to state 100
    PRINT           shift and go to state 7
    RETURN          shift and go to state 8
    IF              shift and go to state 6
    WHILE           shift and go to state 5
    DEF             shift and go to state 11
    NAME            shift and go to state 18
    TRUE            shift and go to state 9
    FALSE           shift and go to state 19
    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 10
    INPUT           shift and go to state 17
    NOT             shift and go to state 24
    LSQUARE         shift and go to state 2
    LCURLY          shift and go to state 21
    LAMBDA          shift and go to state 26

    target                         shift and go to state 20
    compound_statement             shift and go to state 12
    simple_statement               shift and go to state 3
    statement                      shift and go to state 27
    expression                     shift and go to state 25
    subscription                   shift and go to state 15

state 97

    (50) simple_statement -> IF expression COLON suite ELSE . COLON suite

    COLON           shift and go to state 101


state 98

    (46) compound_statement -> DEF NAME LPAREN id_list RPAREN . COLON suite

    COLON           shift and go to state 102


state 99

    (23) expression -> expression IF expression ELSE expression .
    (14) expression -> expression . PLUS expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . IS expression
    (23) expression -> expression . IF expression ELSE expression
    (38) expression -> expression . LPAREN expr_list RPAREN
    (27) subscription -> expression . LSQUARE expression RSQUARE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LSQUARE resolved as shift
    RSQUARE         reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    COMMA           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    RPAREN          reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    RCURLY          reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    PRINT           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    RETURN          reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    WHILE           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    DEF             reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    NAME            reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    TRUE            reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    FALSE           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    INT             reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    FLOAT           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    MINUS           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    INPUT           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    NOT             reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    LCURLY          reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    LAMBDA          reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    $end            reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    COLON           reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    DEDENT          reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    ELSE            reduce using rule 23 (expression -> expression IF expression ELSE expression .)
    PLUS            shift and go to state 52
    AND             shift and go to state 48
    OR              shift and go to state 55
    EQ              shift and go to state 50
    NEQ             shift and go to state 56
    IS              shift and go to state 51
    IF              shift and go to state 54
    LPAREN          shift and go to state 53
    LSQUARE         shift and go to state 49

  ! PLUS            [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! IS              [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! IF              [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! LPAREN          [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]
  ! LSQUARE         [ reduce using rule 23 (expression -> expression IF expression ELSE expression .) ]


state 100

    (47) suite -> INDENT statements DEDENT .

    ELSE            reduce using rule 47 (suite -> INDENT statements DEDENT .)
    PRINT           reduce using rule 47 (suite -> INDENT statements DEDENT .)
    RETURN          reduce using rule 47 (suite -> INDENT statements DEDENT .)
    IF              reduce using rule 47 (suite -> INDENT statements DEDENT .)
    WHILE           reduce using rule 47 (suite -> INDENT statements DEDENT .)
    DEF             reduce using rule 47 (suite -> INDENT statements DEDENT .)
    NAME            reduce using rule 47 (suite -> INDENT statements DEDENT .)
    TRUE            reduce using rule 47 (suite -> INDENT statements DEDENT .)
    FALSE           reduce using rule 47 (suite -> INDENT statements DEDENT .)
    INT             reduce using rule 47 (suite -> INDENT statements DEDENT .)
    FLOAT           reduce using rule 47 (suite -> INDENT statements DEDENT .)
    LPAREN          reduce using rule 47 (suite -> INDENT statements DEDENT .)
    MINUS           reduce using rule 47 (suite -> INDENT statements DEDENT .)
    INPUT           reduce using rule 47 (suite -> INDENT statements DEDENT .)
    NOT             reduce using rule 47 (suite -> INDENT statements DEDENT .)
    LSQUARE         reduce using rule 47 (suite -> INDENT statements DEDENT .)
    LCURLY          reduce using rule 47 (suite -> INDENT statements DEDENT .)
    LAMBDA          reduce using rule 47 (suite -> INDENT statements DEDENT .)
    $end            reduce using rule 47 (suite -> INDENT statements DEDENT .)
    DEDENT          reduce using rule 47 (suite -> INDENT statements DEDENT .)


state 101

    (50) simple_statement -> IF expression COLON suite ELSE COLON . suite
    (47) suite -> . INDENT statements DEDENT

    INDENT          shift and go to state 84

    suite                          shift and go to state 103

state 102

    (46) compound_statement -> DEF NAME LPAREN id_list RPAREN COLON . suite
    (47) suite -> . INDENT statements DEDENT

    INDENT          shift and go to state 84

    suite                          shift and go to state 104

state 103

    (50) simple_statement -> IF expression COLON suite ELSE COLON suite .

    PRINT           reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    IF              reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    DEF             reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    NAME            reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    TRUE            reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    FALSE           reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    INT             reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    FLOAT           reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    INPUT           reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    NOT             reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    LSQUARE         reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    LCURLY          reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    LAMBDA          reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    $end            reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)
    DEDENT          reduce using rule 50 (simple_statement -> IF expression COLON suite ELSE COLON suite .)


state 104

    (46) compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .

    PRINT           reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    RETURN          reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    IF              reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    WHILE           reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    DEF             reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    NAME            reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    TRUE            reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    FALSE           reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    INT             reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    FLOAT           reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    LPAREN          reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    MINUS           reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    INPUT           reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    NOT             reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    LSQUARE         reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    LCURLY          reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    LAMBDA          reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    $end            reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)
    DEDENT          reduce using rule 46 (compound_statement -> DEF NAME LPAREN id_list RPAREN COLON suite .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 25 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 25 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 25 resolved as shift
WARNING: shift/reduce conflict for IF in state 35 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 35 resolved as shift
WARNING: shift/reduce conflict for IF in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 36 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for AND in state 47 resolved as shift
WARNING: shift/reduce conflict for OR in state 47 resolved as shift
WARNING: shift/reduce conflict for EQ in state 47 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 47 resolved as shift
WARNING: shift/reduce conflict for IS in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 47 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 68 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 68 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for IS in state 72 resolved as shift
WARNING: shift/reduce conflict for IF in state 72 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 72 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for IS in state 74 resolved as shift
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for OR in state 75 resolved as shift
WARNING: shift/reduce conflict for EQ in state 75 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for IS in state 75 resolved as shift
WARNING: shift/reduce conflict for IF in state 75 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 75 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for IS in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 79 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for EQ in state 80 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for IS in state 80 resolved as shift
WARNING: shift/reduce conflict for IF in state 80 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for EQ in state 95 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 95 resolved as shift
WARNING: shift/reduce conflict for IS in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 95 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 99 resolved as shift
WARNING: shift/reduce conflict for AND in state 99 resolved as shift
WARNING: shift/reduce conflict for OR in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 99 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 99 resolved as shift
WARNING: shift/reduce conflict for IS in state 99 resolved as shift
WARNING: shift/reduce conflict for IF in state 99 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 99 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 99 resolved as shift
WARNING: reduce/reduce conflict in state 15 resolved using rule (expression -> subscription)
WARNING: rejected rule (target -> subscription) in state 15
WARNING: reduce/reduce conflict in state 18 resolved using rule (expression -> NAME)
WARNING: rejected rule (target -> NAME) in state 18
